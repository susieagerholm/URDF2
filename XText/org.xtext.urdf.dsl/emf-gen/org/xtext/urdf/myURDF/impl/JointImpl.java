/**
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.myURDF.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.urdf.myURDF.Axis;
import org.xtext.urdf.myURDF.Calibration;
import org.xtext.urdf.myURDF.Dynamics;
import org.xtext.urdf.myURDF.Joint;
import org.xtext.urdf.myURDF.JointDecorator;
import org.xtext.urdf.myURDF.JointType;
import org.xtext.urdf.myURDF.Limit;
import org.xtext.urdf.myURDF.Link;
import org.xtext.urdf.myURDF.Mimic;
import org.xtext.urdf.myURDF.MyURDFPackage;
import org.xtext.urdf.myURDF.Origin;
import org.xtext.urdf.myURDF.SafetyController;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Joint</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.urdf.myURDF.impl.JointImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.JointImpl#getChildOf <em>Child Of</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.JointImpl#getParentOf <em>Parent Of</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.JointImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.JointImpl#getIsReuseOf <em>Is Reuse Of</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.JointImpl#getDecorator <em>Decorator</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JointImpl extends MinimalEObjectImpl.Container implements Joint {
	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The cached value of the '{@link #getChildOf() <em>Child Of</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getChildOf()
	 * @generated
	 * @ordered
	 */
	protected Link childOf;

	/**
	 * The cached value of the '{@link #getParentOf() <em>Parent Of</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getParentOf()
	 * @generated
	 * @ordered
	 */
	protected Link parentOf;

	/**
	 * The default value of the '{@link #getType() <em>Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getType()
	 * @generated
	 * @ordered
	 */
	protected static final JointType TYPE_EDEFAULT = JointType.FIXED;

	/**
	 * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getType()
	 * @generated
	 * @ordered
	 */
	protected JointType type = TYPE_EDEFAULT;

	/**
	 * The cached value of the '{@link #getIsReuseOf() <em>Is Reuse Of</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getIsReuseOf()
	 * @generated
	 * @ordered
	 */
	protected Joint isReuseOf;

	/**
	 * The cached value of the '{@link #getDecorator() <em>Decorator</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getDecorator()
	 * @generated
	 * @ordered
	 */
	protected JointDecorator decorator;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JointImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return MyURDFPackage.Literals.JOINT;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.JOINT__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public JointType getType() {
		return type;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setType(JointType newType) {
		JointType oldType = type;
		type = newType == null ? TYPE_EDEFAULT : newType;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.JOINT__TYPE, oldType, type));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Joint getIsReuseOf() {
		if (isReuseOf != null && isReuseOf.eIsProxy()) {
			InternalEObject oldIsReuseOf = (InternalEObject)isReuseOf;
			isReuseOf = (Joint)eResolveProxy(oldIsReuseOf);
			if (isReuseOf != oldIsReuseOf) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyURDFPackage.JOINT__IS_REUSE_OF, oldIsReuseOf, isReuseOf));
			}
		}
		return isReuseOf;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Joint basicGetIsReuseOf() {
		return isReuseOf;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setIsReuseOf(Joint newIsReuseOf) {
		Joint oldIsReuseOf = isReuseOf;
		isReuseOf = newIsReuseOf;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.JOINT__IS_REUSE_OF, oldIsReuseOf, isReuseOf));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public JointDecorator getDecorator() {
		return decorator;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetDecorator(JointDecorator newDecorator, NotificationChain msgs) {
		JointDecorator oldDecorator = decorator;
		decorator = newDecorator;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyURDFPackage.JOINT__DECORATOR, oldDecorator, newDecorator);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setDecorator(JointDecorator newDecorator) {
		if (newDecorator != decorator) {
			NotificationChain msgs = null;
			if (decorator != null)
				msgs = ((InternalEObject)decorator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.JOINT__DECORATOR, null, msgs);
			if (newDecorator != null)
				msgs = ((InternalEObject)newDecorator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.JOINT__DECORATOR, null, msgs);
			msgs = basicSetDecorator(newDecorator, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.JOINT__DECORATOR, newDecorator, newDecorator));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Link getChildOf() {
		if (childOf != null && childOf.eIsProxy()) {
			InternalEObject oldChildOf = (InternalEObject)childOf;
			childOf = (Link)eResolveProxy(oldChildOf);
			if (childOf != oldChildOf) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyURDFPackage.JOINT__CHILD_OF, oldChildOf, childOf));
			}
		}
		return childOf;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Link basicGetChildOf() {
		return childOf;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setChildOf(Link newChildOf) {
		Link oldChildOf = childOf;
		childOf = newChildOf;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.JOINT__CHILD_OF, oldChildOf, childOf));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Link getParentOf() {
		if (parentOf != null && parentOf.eIsProxy()) {
			InternalEObject oldParentOf = (InternalEObject)parentOf;
			parentOf = (Link)eResolveProxy(oldParentOf);
			if (parentOf != oldParentOf) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyURDFPackage.JOINT__PARENT_OF, oldParentOf, parentOf));
			}
		}
		return parentOf;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Link basicGetParentOf() {
		return parentOf;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentOf(Link newParentOf) {
		Link oldParentOf = parentOf;
		parentOf = newParentOf;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.JOINT__PARENT_OF, oldParentOf, parentOf));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case MyURDFPackage.JOINT__DECORATOR:
				return basicSetDecorator(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case MyURDFPackage.JOINT__NAME:
				return getName();
			case MyURDFPackage.JOINT__CHILD_OF:
				if (resolve) return getChildOf();
				return basicGetChildOf();
			case MyURDFPackage.JOINT__PARENT_OF:
				if (resolve) return getParentOf();
				return basicGetParentOf();
			case MyURDFPackage.JOINT__TYPE:
				return getType();
			case MyURDFPackage.JOINT__IS_REUSE_OF:
				if (resolve) return getIsReuseOf();
				return basicGetIsReuseOf();
			case MyURDFPackage.JOINT__DECORATOR:
				return getDecorator();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case MyURDFPackage.JOINT__NAME:
				setName((String)newValue);
				return;
			case MyURDFPackage.JOINT__CHILD_OF:
				setChildOf((Link)newValue);
				return;
			case MyURDFPackage.JOINT__PARENT_OF:
				setParentOf((Link)newValue);
				return;
			case MyURDFPackage.JOINT__TYPE:
				setType((JointType)newValue);
				return;
			case MyURDFPackage.JOINT__IS_REUSE_OF:
				setIsReuseOf((Joint)newValue);
				return;
			case MyURDFPackage.JOINT__DECORATOR:
				setDecorator((JointDecorator)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case MyURDFPackage.JOINT__NAME:
				setName(NAME_EDEFAULT);
				return;
			case MyURDFPackage.JOINT__CHILD_OF:
				setChildOf((Link)null);
				return;
			case MyURDFPackage.JOINT__PARENT_OF:
				setParentOf((Link)null);
				return;
			case MyURDFPackage.JOINT__TYPE:
				setType(TYPE_EDEFAULT);
				return;
			case MyURDFPackage.JOINT__IS_REUSE_OF:
				setIsReuseOf((Joint)null);
				return;
			case MyURDFPackage.JOINT__DECORATOR:
				setDecorator((JointDecorator)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case MyURDFPackage.JOINT__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case MyURDFPackage.JOINT__CHILD_OF:
				return childOf != null;
			case MyURDFPackage.JOINT__PARENT_OF:
				return parentOf != null;
			case MyURDFPackage.JOINT__TYPE:
				return type != TYPE_EDEFAULT;
			case MyURDFPackage.JOINT__IS_REUSE_OF:
				return isReuseOf != null;
			case MyURDFPackage.JOINT__DECORATOR:
				return decorator != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", Type: ");
		result.append(type);
		result.append(')');
		return result.toString();
	}

} //JointImpl
