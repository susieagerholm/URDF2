/**
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.myURDF.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.urdf.myURDF.Collision;
import org.xtext.urdf.myURDF.Inertial;
import org.xtext.urdf.myURDF.LinkDecorator;
import org.xtext.urdf.myURDF.MyURDFPackage;
import org.xtext.urdf.myURDF.Visual;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Link Decorator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.urdf.myURDF.impl.LinkDecoratorImpl#getInertial <em>Inertial</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.LinkDecoratorImpl#getVisual <em>Visual</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.LinkDecoratorImpl#getCollision <em>Collision</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LinkDecoratorImpl extends MinimalEObjectImpl.Container implements LinkDecorator {
	/**
	 * The cached value of the '{@link #getInertial() <em>Inertial</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getInertial()
	 * @generated
	 * @ordered
	 */
	protected EList<Inertial> inertial;

	/**
	 * The cached value of the '{@link #getVisual() <em>Visual</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getVisual()
	 * @generated
	 * @ordered
	 */
	protected EList<Visual> visual;

	/**
	 * The cached value of the '{@link #getCollision() <em>Collision</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCollision()
	 * @generated
	 * @ordered
	 */
	protected EList<Collision> collision;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkDecoratorImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return MyURDFPackage.Literals.LINK_DECORATOR;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Inertial> getInertial() {
		if (inertial == null) {
			inertial = new EObjectContainmentEList<Inertial>(Inertial.class, this, MyURDFPackage.LINK_DECORATOR__INERTIAL);
		}
		return inertial;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Visual> getVisual() {
		if (visual == null) {
			visual = new EObjectContainmentEList<Visual>(Visual.class, this, MyURDFPackage.LINK_DECORATOR__VISUAL);
		}
		return visual;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Collision> getCollision() {
		if (collision == null) {
			collision = new EObjectContainmentEList<Collision>(Collision.class, this, MyURDFPackage.LINK_DECORATOR__COLLISION);
		}
		return collision;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case MyURDFPackage.LINK_DECORATOR__INERTIAL:
				return ((InternalEList<?>)getInertial()).basicRemove(otherEnd, msgs);
			case MyURDFPackage.LINK_DECORATOR__VISUAL:
				return ((InternalEList<?>)getVisual()).basicRemove(otherEnd, msgs);
			case MyURDFPackage.LINK_DECORATOR__COLLISION:
				return ((InternalEList<?>)getCollision()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case MyURDFPackage.LINK_DECORATOR__INERTIAL:
				return getInertial();
			case MyURDFPackage.LINK_DECORATOR__VISUAL:
				return getVisual();
			case MyURDFPackage.LINK_DECORATOR__COLLISION:
				return getCollision();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case MyURDFPackage.LINK_DECORATOR__INERTIAL:
				getInertial().clear();
				getInertial().addAll((Collection<? extends Inertial>)newValue);
				return;
			case MyURDFPackage.LINK_DECORATOR__VISUAL:
				getVisual().clear();
				getVisual().addAll((Collection<? extends Visual>)newValue);
				return;
			case MyURDFPackage.LINK_DECORATOR__COLLISION:
				getCollision().clear();
				getCollision().addAll((Collection<? extends Collision>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case MyURDFPackage.LINK_DECORATOR__INERTIAL:
				getInertial().clear();
				return;
			case MyURDFPackage.LINK_DECORATOR__VISUAL:
				getVisual().clear();
				return;
			case MyURDFPackage.LINK_DECORATOR__COLLISION:
				getCollision().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case MyURDFPackage.LINK_DECORATOR__INERTIAL:
				return inertial != null && !inertial.isEmpty();
			case MyURDFPackage.LINK_DECORATOR__VISUAL:
				return visual != null && !visual.isEmpty();
			case MyURDFPackage.LINK_DECORATOR__COLLISION:
				return collision != null && !collision.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //LinkDecoratorImpl
