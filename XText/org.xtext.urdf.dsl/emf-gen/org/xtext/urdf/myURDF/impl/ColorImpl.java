/**
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.myURDF.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.urdf.myURDF.Color;
import org.xtext.urdf.myURDF.MyURDFPackage;
import org.xtext.urdf.myURDF.NamedElement;
import org.xtext.urdf.myURDF.URDFAttrFloat;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Color</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.urdf.myURDF.impl.ColorImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.ColorImpl#getRed <em>Red</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.ColorImpl#getGreen <em>Green</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.ColorImpl#getBlue <em>Blue</em>}</li>
 *   <li>{@link org.xtext.urdf.myURDF.impl.ColorImpl#getAlpha <em>Alpha</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ColorImpl extends MaterialImpl implements Color {
	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The cached value of the '{@link #getRed() <em>Red</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRed()
	 * @generated
	 * @ordered
	 */
	protected URDFAttrFloat red;

	/**
	 * The cached value of the '{@link #getGreen() <em>Green</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGreen()
	 * @generated
	 * @ordered
	 */
	protected URDFAttrFloat green;

	/**
	 * The cached value of the '{@link #getBlue() <em>Blue</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getBlue()
	 * @generated
	 * @ordered
	 */
	protected URDFAttrFloat blue;

	/**
	 * The cached value of the '{@link #getAlpha() <em>Alpha</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getAlpha()
	 * @generated
	 * @ordered
	 */
	protected URDFAttrFloat alpha;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return MyURDFPackage.Literals.COLOR;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public URDFAttrFloat getRed() {
		return red;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetRed(URDFAttrFloat newRed, NotificationChain msgs) {
		URDFAttrFloat oldRed = red;
		red = newRed;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__RED, oldRed, newRed);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setRed(URDFAttrFloat newRed) {
		if (newRed != red) {
			NotificationChain msgs = null;
			if (red != null)
				msgs = ((InternalEObject)red).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__RED, null, msgs);
			if (newRed != null)
				msgs = ((InternalEObject)newRed).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__RED, null, msgs);
			msgs = basicSetRed(newRed, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__RED, newRed, newRed));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public URDFAttrFloat getGreen() {
		return green;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetGreen(URDFAttrFloat newGreen, NotificationChain msgs) {
		URDFAttrFloat oldGreen = green;
		green = newGreen;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__GREEN, oldGreen, newGreen);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setGreen(URDFAttrFloat newGreen) {
		if (newGreen != green) {
			NotificationChain msgs = null;
			if (green != null)
				msgs = ((InternalEObject)green).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__GREEN, null, msgs);
			if (newGreen != null)
				msgs = ((InternalEObject)newGreen).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__GREEN, null, msgs);
			msgs = basicSetGreen(newGreen, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__GREEN, newGreen, newGreen));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public URDFAttrFloat getBlue() {
		return blue;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetBlue(URDFAttrFloat newBlue, NotificationChain msgs) {
		URDFAttrFloat oldBlue = blue;
		blue = newBlue;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__BLUE, oldBlue, newBlue);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setBlue(URDFAttrFloat newBlue) {
		if (newBlue != blue) {
			NotificationChain msgs = null;
			if (blue != null)
				msgs = ((InternalEObject)blue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__BLUE, null, msgs);
			if (newBlue != null)
				msgs = ((InternalEObject)newBlue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__BLUE, null, msgs);
			msgs = basicSetBlue(newBlue, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__BLUE, newBlue, newBlue));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public URDFAttrFloat getAlpha() {
		return alpha;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetAlpha(URDFAttrFloat newAlpha, NotificationChain msgs) {
		URDFAttrFloat oldAlpha = alpha;
		alpha = newAlpha;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__ALPHA, oldAlpha, newAlpha);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setAlpha(URDFAttrFloat newAlpha) {
		if (newAlpha != alpha) {
			NotificationChain msgs = null;
			if (alpha != null)
				msgs = ((InternalEObject)alpha).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__ALPHA, null, msgs);
			if (newAlpha != null)
				msgs = ((InternalEObject)newAlpha).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyURDFPackage.COLOR__ALPHA, null, msgs);
			msgs = basicSetAlpha(newAlpha, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyURDFPackage.COLOR__ALPHA, newAlpha, newAlpha));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case MyURDFPackage.COLOR__RED:
				return basicSetRed(null, msgs);
			case MyURDFPackage.COLOR__GREEN:
				return basicSetGreen(null, msgs);
			case MyURDFPackage.COLOR__BLUE:
				return basicSetBlue(null, msgs);
			case MyURDFPackage.COLOR__ALPHA:
				return basicSetAlpha(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case MyURDFPackage.COLOR__NAME:
				return getName();
			case MyURDFPackage.COLOR__RED:
				return getRed();
			case MyURDFPackage.COLOR__GREEN:
				return getGreen();
			case MyURDFPackage.COLOR__BLUE:
				return getBlue();
			case MyURDFPackage.COLOR__ALPHA:
				return getAlpha();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case MyURDFPackage.COLOR__NAME:
				setName((String)newValue);
				return;
			case MyURDFPackage.COLOR__RED:
				setRed((URDFAttrFloat)newValue);
				return;
			case MyURDFPackage.COLOR__GREEN:
				setGreen((URDFAttrFloat)newValue);
				return;
			case MyURDFPackage.COLOR__BLUE:
				setBlue((URDFAttrFloat)newValue);
				return;
			case MyURDFPackage.COLOR__ALPHA:
				setAlpha((URDFAttrFloat)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case MyURDFPackage.COLOR__NAME:
				setName(NAME_EDEFAULT);
				return;
			case MyURDFPackage.COLOR__RED:
				setRed((URDFAttrFloat)null);
				return;
			case MyURDFPackage.COLOR__GREEN:
				setGreen((URDFAttrFloat)null);
				return;
			case MyURDFPackage.COLOR__BLUE:
				setBlue((URDFAttrFloat)null);
				return;
			case MyURDFPackage.COLOR__ALPHA:
				setAlpha((URDFAttrFloat)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case MyURDFPackage.COLOR__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case MyURDFPackage.COLOR__RED:
				return red != null;
			case MyURDFPackage.COLOR__GREEN:
				return green != null;
			case MyURDFPackage.COLOR__BLUE:
				return blue != null;
			case MyURDFPackage.COLOR__ALPHA:
				return alpha != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == NamedElement.class) {
			switch (derivedFeatureID) {
				case MyURDFPackage.COLOR__NAME: return MyURDFPackage.NAMED_ELEMENT__NAME;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == NamedElement.class) {
			switch (baseFeatureID) {
				case MyURDFPackage.NAMED_ELEMENT__NAME: return MyURDFPackage.COLOR__NAME;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(')');
		return result.toString();
	}

} //ColorImpl
