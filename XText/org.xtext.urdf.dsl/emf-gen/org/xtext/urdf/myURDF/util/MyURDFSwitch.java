/**
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.myURDF.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.urdf.myURDF.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.urdf.myURDF.MyURDFPackage
 * @generated
 */
public class MyURDFSwitch<T> extends Switch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static MyURDFPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MyURDFSwitch() {
		if (modelPackage == null) {
			modelPackage = MyURDFPackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage) {
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
	@Override
	protected T doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
			case MyURDFPackage.ROBOT: {
				Robot robot = (Robot)theEObject;
				T result = caseRobot(robot);
				if (result == null) result = caseNamedElement(robot);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.RE_USE_ABLE: {
				ReUseAble reUseAble = (ReUseAble)theEObject;
				T result = caseReUseAble(reUseAble);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.LINK: {
				Link link = (Link)theEObject;
				T result = caseLink(link);
				if (result == null) result = caseReUseAble(link);
				if (result == null) result = caseNamedElement(link);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.REUSE: {
				Reuse reuse = (Reuse)theEObject;
				T result = caseReuse(reuse);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.REF: {
				Ref ref = (Ref)theEObject;
				T result = caseRef(ref);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.RE_USABLE_REF: {
				ReUsableRef reUsableRef = (ReUsableRef)theEObject;
				T result = caseReUsableRef(reUsableRef);
				if (result == null) result = caseRef(reUsableRef);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.URDF_ATTR_SIGNED_NUMERIC: {
				URDFAttrSignedNumeric urdfAttrSignedNumeric = (URDFAttrSignedNumeric)theEObject;
				T result = caseURDFAttrSignedNumeric(urdfAttrSignedNumeric);
				if (result == null) result = caseReUseAble(urdfAttrSignedNumeric);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.URDF_ATTR_FLOAT: {
				URDFAttrFloat urdfAttrFloat = (URDFAttrFloat)theEObject;
				T result = caseURDFAttrFloat(urdfAttrFloat);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.URDF_ATTR_INT: {
				URDFAttrINT urdfAttrINT = (URDFAttrINT)theEObject;
				T result = caseURDFAttrINT(urdfAttrINT);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.URDF_ATTR_NUMERIC: {
				URDFAttrNumeric urdfAttrNumeric = (URDFAttrNumeric)theEObject;
				T result = caseURDFAttrNumeric(urdfAttrNumeric);
				if (result == null) result = caseReUseAble(urdfAttrNumeric);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.URDF_ATTR_STRING: {
				URDFAttrSTRING urdfAttrSTRING = (URDFAttrSTRING)theEObject;
				T result = caseURDFAttrSTRING(urdfAttrSTRING);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.DOT_EXPRESSION: {
				DotExpression dotExpression = (DotExpression)theEObject;
				T result = caseDotExpression(dotExpression);
				if (result == null) result = caseRef(dotExpression);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.INERTIAL: {
				Inertial inertial = (Inertial)theEObject;
				T result = caseInertial(inertial);
				if (result == null) result = caseReUseAble(inertial);
				if (result == null) result = caseNamedElement(inertial);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.VISUAL: {
				Visual visual = (Visual)theEObject;
				T result = caseVisual(visual);
				if (result == null) result = caseReUseAble(visual);
				if (result == null) result = caseNamedElement(visual);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.INERTIA: {
				Inertia inertia = (Inertia)theEObject;
				T result = caseInertia(inertia);
				if (result == null) result = caseReUseAble(inertia);
				if (result == null) result = caseNamedElement(inertia);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.MASS: {
				Mass mass = (Mass)theEObject;
				T result = caseMass(mass);
				if (result == null) result = caseReUseAble(mass);
				if (result == null) result = caseNamedElement(mass);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.ORIGIN: {
				Origin origin = (Origin)theEObject;
				T result = caseOrigin(origin);
				if (result == null) result = caseReUseAble(origin);
				if (result == null) result = caseNamedElement(origin);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.COLLISION: {
				Collision collision = (Collision)theEObject;
				T result = caseCollision(collision);
				if (result == null) result = caseReUseAble(collision);
				if (result == null) result = caseNamedElement(collision);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.GEOMETRY: {
				Geometry geometry = (Geometry)theEObject;
				T result = caseGeometry(geometry);
				if (result == null) result = caseReUseAble(geometry);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.BOX: {
				Box box = (Box)theEObject;
				T result = caseBox(box);
				if (result == null) result = caseGeometry(box);
				if (result == null) result = caseNamedElement(box);
				if (result == null) result = caseReUseAble(box);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.CYLINDER: {
				Cylinder cylinder = (Cylinder)theEObject;
				T result = caseCylinder(cylinder);
				if (result == null) result = caseGeometry(cylinder);
				if (result == null) result = caseNamedElement(cylinder);
				if (result == null) result = caseReUseAble(cylinder);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.MESH: {
				Mesh mesh = (Mesh)theEObject;
				T result = caseMesh(mesh);
				if (result == null) result = caseGeometry(mesh);
				if (result == null) result = caseNamedElement(mesh);
				if (result == null) result = caseReUseAble(mesh);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.SPHERE: {
				Sphere sphere = (Sphere)theEObject;
				T result = caseSphere(sphere);
				if (result == null) result = caseGeometry(sphere);
				if (result == null) result = caseNamedElement(sphere);
				if (result == null) result = caseReUseAble(sphere);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.MATERIAL: {
				Material material = (Material)theEObject;
				T result = caseMaterial(material);
				if (result == null) result = caseReUseAble(material);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.TEXTURE: {
				Texture texture = (Texture)theEObject;
				T result = caseTexture(texture);
				if (result == null) result = caseMaterial(texture);
				if (result == null) result = caseNamedElement(texture);
				if (result == null) result = caseReUseAble(texture);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.COLOR: {
				Color color = (Color)theEObject;
				T result = caseColor(color);
				if (result == null) result = caseMaterial(color);
				if (result == null) result = caseNamedElement(color);
				if (result == null) result = caseReUseAble(color);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.JOINT: {
				Joint joint = (Joint)theEObject;
				T result = caseJoint(joint);
				if (result == null) result = caseReUseAble(joint);
				if (result == null) result = caseNamedElement(joint);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.AXIS: {
				Axis axis = (Axis)theEObject;
				T result = caseAxis(axis);
				if (result == null) result = caseReUseAble(axis);
				if (result == null) result = caseNamedElement(axis);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.LIMIT: {
				Limit limit = (Limit)theEObject;
				T result = caseLimit(limit);
				if (result == null) result = caseReUseAble(limit);
				if (result == null) result = caseNamedElement(limit);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.CALIBRATION: {
				Calibration calibration = (Calibration)theEObject;
				T result = caseCalibration(calibration);
				if (result == null) result = caseReUseAble(calibration);
				if (result == null) result = caseNamedElement(calibration);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.DYNAMICS: {
				Dynamics dynamics = (Dynamics)theEObject;
				T result = caseDynamics(dynamics);
				if (result == null) result = caseReUseAble(dynamics);
				if (result == null) result = caseNamedElement(dynamics);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.SAFETY_CONTROLLER: {
				SafetyController safetyController = (SafetyController)theEObject;
				T result = caseSafetyController(safetyController);
				if (result == null) result = caseReUseAble(safetyController);
				if (result == null) result = caseNamedElement(safetyController);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.TOPOLOGY: {
				Topology topology = (Topology)theEObject;
				T result = caseTopology(topology);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.JOINT_REF: {
				JointRef jointRef = (JointRef)theEObject;
				T result = caseJointRef(jointRef);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.ASSIGN_NEW_VALUE: {
				AssignNewValue assignNewValue = (AssignNewValue)theEObject;
				T result = caseAssignNewValue(assignNewValue);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.ADD_TO: {
				AddTo addTo = (AddTo)theEObject;
				T result = caseAddTo(addTo);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case MyURDFPackage.NAMED_ELEMENT: {
				NamedElement namedElement = (NamedElement)theEObject;
				T result = caseNamedElement(namedElement);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			default: return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Robot</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Robot</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRobot(Robot object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Topology</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Topology</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTopology(Topology object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Material</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Material</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMaterial(Material object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Geometry</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Geometry</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGeometry(Geometry object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLink(Link object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Reuse</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Reuse</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseReuse(Reuse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ref</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ref</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRef(Ref object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Re Usable Ref</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Re Usable Ref</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseReUsableRef(ReUsableRef object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Joint</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Joint</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseJoint(Joint object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Joint Ref</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Joint Ref</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseJointRef(JointRef object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Assign New Value</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Assign New Value</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAssignNewValue(AssignNewValue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Add To</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Add To</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAddTo(AddTo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Named Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Named Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNamedElement(NamedElement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inertial</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inertial</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInertial(Inertial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Visual</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Visual</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVisual(Visual object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Collision</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Collision</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCollision(Collision object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Origin</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Origin</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOrigin(Origin object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Mass</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Mass</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMass(Mass object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>URDF Attr Signed Numeric</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>URDF Attr Signed Numeric</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseURDFAttrSignedNumeric(URDFAttrSignedNumeric object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>URDF Attr Float</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>URDF Attr Float</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseURDFAttrFloat(URDFAttrFloat object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>URDF Attr INT</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>URDF Attr INT</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseURDFAttrINT(URDFAttrINT object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>URDF Attr Numeric</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>URDF Attr Numeric</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseURDFAttrNumeric(URDFAttrNumeric object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>URDF Attr STRING</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>URDF Attr STRING</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseURDFAttrSTRING(URDFAttrSTRING object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Dot Expression</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Dot Expression</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDotExpression(DotExpression object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inertia</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inertia</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInertia(Inertia object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Color</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Color</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseColor(Color object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Texture</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Texture</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTexture(Texture object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Box</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Box</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBox(Box object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Cylinder</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Cylinder</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCylinder(Cylinder object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Mesh</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Mesh</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMesh(Mesh object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Sphere</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sphere</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSphere(Sphere object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Limit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Limit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLimit(Limit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Axis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Axis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAxis(Axis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Calibration</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Calibration</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCalibration(Calibration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Dynamics</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Dynamics</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDynamics(Dynamics object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Safety Controller</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Safety Controller</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSafetyController(SafetyController object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Re Use Able</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Re Use Able</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseReUseAble(ReUseAble object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object) {
		return null;
	}

} //MyURDFSwitch
