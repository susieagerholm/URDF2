/**
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.tests.suite;

import com.google.inject.Inject;
import org.eclipse.xtext.junit4.InjectWith;
import org.eclipse.xtext.junit4.XtextRunner;
import org.eclipse.xtext.junit4.util.ParseHelper;
import org.eclipse.xtext.xbase.lib.Extension;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.xtext.urdf.myURDF.Robot;
import org.xtext.urdf.tests.DslInjectorProvider;

@RunWith(XtextRunner.class)
@InjectWith(DslInjectorProvider.class)
@SuppressWarnings("all")
public class DslParsingTest {
  @Inject
  @Extension
  private ParseHelper<Robot> _parseHelper;
  
  /**
   * Are elements created as expected by their respective default constructor in grammar
   * Are elements created as expected by Topology and iDerivedStateComputer
   * Are elements based on Reuse created as expected
   * Are Decorations created as expected
   */
  @Test
  public void loadModel() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field link is undefined for the type Robot");
  }
  
  @Test
  public void createLink() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field createTestUrdf is undefined for the type Class<TestAdapter>"
      + "\nlink cannot be resolved"
      + "\nget cannot be resolved"
      + "\nname cannot be resolved");
  }
  
  @Test
  public void createJoint() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field createTestUrdf is undefined for the type Class<TestAdapter>"
      + "\njoint cannot be resolved"
      + "\nget cannot be resolved"
      + "\nname cannot be resolved"
      + "\nparentOf cannot be resolved"
      + "\nname cannot be resolved"
      + "\nchildOf cannot be resolved"
      + "\nname cannot be resolved");
  }
}
