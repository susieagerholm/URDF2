/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.urdf.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.urdf.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.urdf.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTopology
entryRuleTopology
:
{ before(grammarAccess.getTopologyRule()); }
	 ruleTopology
{ after(grammarAccess.getTopologyRule()); } 
	 EOF 
;

// Rule Topology
ruleTopology 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopologyAccess().getGroup()); }
		(rule__Topology__Group__0)
		{ after(grammarAccess.getTopologyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinkDecorator
entryRuleLinkDecorator
:
{ before(grammarAccess.getLinkDecoratorRule()); }
	 ruleLinkDecorator
{ after(grammarAccess.getLinkDecoratorRule()); } 
	 EOF 
;

// Rule LinkDecorator
ruleLinkDecorator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkDecoratorAccess().getGroup()); }
		(rule__LinkDecorator__Group__0)
		{ after(grammarAccess.getLinkDecoratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinkRef
entryRuleLinkRef
:
{ before(grammarAccess.getLinkRefRule()); }
	 ruleLinkRef
{ after(grammarAccess.getLinkRefRule()); } 
	 EOF 
;

// Rule LinkRef
ruleLinkRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkRefAccess().getGroup()); }
		(rule__LinkRef__Group__0)
		{ after(grammarAccess.getLinkRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoint
entryRuleJoint
:
{ before(grammarAccess.getJointRule()); }
	 ruleJoint
{ after(grammarAccess.getJointRule()); } 
	 EOF 
;

// Rule Joint
ruleJoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJointAccess().getGroup()); }
		(rule__Joint__Group__0)
		{ after(grammarAccess.getJointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJointDecorator
entryRuleJointDecorator
:
{ before(grammarAccess.getJointDecoratorRule()); }
	 ruleJointDecorator
{ after(grammarAccess.getJointDecoratorRule()); } 
	 EOF 
;

// Rule JointDecorator
ruleJointDecorator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJointDecoratorAccess().getGroup()); }
		(rule__JointDecorator__Group__0)
		{ after(grammarAccess.getJointDecoratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJointRef
entryRuleJointRef
:
{ before(grammarAccess.getJointRefRule()); }
	 ruleJointRef
{ after(grammarAccess.getJointRefRule()); } 
	 EOF 
;

// Rule JointRef
ruleJointRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJointRefAccess().getAlternatives()); }
		(rule__JointRef__Alternatives)
		{ after(grammarAccess.getJointRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertial
entryRuleInertial
:
{ before(grammarAccess.getInertialRule()); }
	 ruleInertial
{ after(grammarAccess.getInertialRule()); } 
	 EOF 
;

// Rule Inertial
ruleInertial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertialAccess().getGroup()); }
		(rule__Inertial__Group__0)
		{ after(grammarAccess.getInertialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertia
entryRuleInertia
:
{ before(grammarAccess.getInertiaRule()); }
	 ruleInertia
{ after(grammarAccess.getInertiaRule()); } 
	 EOF 
;

// Rule Inertia
ruleInertia 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertiaAccess().getGroup()); }
		(rule__Inertia__Group__0)
		{ after(grammarAccess.getInertiaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisual
entryRuleVisual
:
{ before(grammarAccess.getVisualRule()); }
	 ruleVisual
{ after(grammarAccess.getVisualRule()); } 
	 EOF 
;

// Rule Visual
ruleVisual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualAccess().getGroup()); }
		(rule__Visual__Group__0)
		{ after(grammarAccess.getVisualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry
entryRuleGeometry
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometryAccess().getAlternatives()); }
		(rule__Geometry__Alternatives)
		{ after(grammarAccess.getGeometryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBox
entryRuleBox
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoxAccess().getGroup()); }
		(rule__Box__Group__0)
		{ after(grammarAccess.getBoxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCylinder
entryRuleCylinder
:
{ before(grammarAccess.getCylinderRule()); }
	 ruleCylinder
{ after(grammarAccess.getCylinderRule()); } 
	 EOF 
;

// Rule Cylinder
ruleCylinder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCylinderAccess().getGroup()); }
		(rule__Cylinder__Group__0)
		{ after(grammarAccess.getCylinderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMesh
entryRuleMesh
:
{ before(grammarAccess.getMeshRule()); }
	 ruleMesh
{ after(grammarAccess.getMeshRule()); } 
	 EOF 
;

// Rule Mesh
ruleMesh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeshAccess().getGroup()); }
		(rule__Mesh__Group__0)
		{ after(grammarAccess.getMeshAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSphere
entryRuleSphere
:
{ before(grammarAccess.getSphereRule()); }
	 ruleSphere
{ after(grammarAccess.getSphereRule()); } 
	 EOF 
;

// Rule Sphere
ruleSphere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSphereAccess().getGroup()); }
		(rule__Sphere__Group__0)
		{ after(grammarAccess.getSphereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollision
entryRuleCollision
:
{ before(grammarAccess.getCollisionRule()); }
	 ruleCollision
{ after(grammarAccess.getCollisionRule()); } 
	 EOF 
;

// Rule Collision
ruleCollision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollisionAccess().getGroup()); }
		(rule__Collision__Group__0)
		{ after(grammarAccess.getCollisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrigin
entryRuleOrigin
:
{ before(grammarAccess.getOriginRule()); }
	 ruleOrigin
{ after(grammarAccess.getOriginRule()); } 
	 EOF 
;

// Rule Origin
ruleOrigin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOriginAccess().getGroup()); }
		(rule__Origin__Group__0)
		{ after(grammarAccess.getOriginAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMass
entryRuleMass
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMassAccess().getGroup()); }
		(rule__Mass__Group__0)
		{ after(grammarAccess.getMassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getGroup()); }
		(rule__Color__Group__0)
		{ after(grammarAccess.getColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTexture
entryRuleTexture
:
{ before(grammarAccess.getTextureRule()); }
	 ruleTexture
{ after(grammarAccess.getTextureRule()); } 
	 EOF 
;

// Rule Texture
ruleTexture 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextureAccess().getGroup()); }
		(rule__Texture__Group__0)
		{ after(grammarAccess.getTextureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLimit
entryRuleLimit
:
{ before(grammarAccess.getLimitRule()); }
	 ruleLimit
{ after(grammarAccess.getLimitRule()); } 
	 EOF 
;

// Rule Limit
ruleLimit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLimitAccess().getGroup()); }
		(rule__Limit__Group__0)
		{ after(grammarAccess.getLimitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAxis
entryRuleAxis
:
{ before(grammarAccess.getAxisRule()); }
	 ruleAxis
{ after(grammarAccess.getAxisRule()); } 
	 EOF 
;

// Rule Axis
ruleAxis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAxisAccess().getGroup()); }
		(rule__Axis__Group__0)
		{ after(grammarAccess.getAxisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalibration
entryRuleCalibration
:
{ before(grammarAccess.getCalibrationRule()); }
	 ruleCalibration
{ after(grammarAccess.getCalibrationRule()); } 
	 EOF 
;

// Rule Calibration
ruleCalibration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalibrationAccess().getGroup()); }
		(rule__Calibration__Group__0)
		{ after(grammarAccess.getCalibrationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDynamics
entryRuleDynamics
:
{ before(grammarAccess.getDynamicsRule()); }
	 ruleDynamics
{ after(grammarAccess.getDynamicsRule()); } 
	 EOF 
;

// Rule Dynamics
ruleDynamics 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDynamicsAccess().getGroup()); }
		(rule__Dynamics__Group__0)
		{ after(grammarAccess.getDynamicsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSafetyController
entryRuleSafetyController
:
{ before(grammarAccess.getSafetyControllerRule()); }
	 ruleSafetyController
{ after(grammarAccess.getSafetyControllerRule()); } 
	 EOF 
;

// Rule SafetyController
ruleSafetyController 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getGroup()); }
		(rule__SafetyController__Group__0)
		{ after(grammarAccess.getSafetyControllerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleURDFAttrSignedNumeric
entryRuleURDFAttrSignedNumeric
:
{ before(grammarAccess.getURDFAttrSignedNumericRule()); }
	 ruleURDFAttrSignedNumeric
{ after(grammarAccess.getURDFAttrSignedNumericRule()); } 
	 EOF 
;

// Rule URDFAttrSignedNumeric
ruleURDFAttrSignedNumeric 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURDFAttrSignedNumericAccess().getValueAssignment()); }
		(rule__URDFAttrSignedNumeric__ValueAssignment)
		{ after(grammarAccess.getURDFAttrSignedNumericAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleURDFAttrFloat
entryRuleURDFAttrFloat
:
{ before(grammarAccess.getURDFAttrFloatRule()); }
	 ruleURDFAttrFloat
{ after(grammarAccess.getURDFAttrFloatRule()); } 
	 EOF 
;

// Rule URDFAttrFloat
ruleURDFAttrFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURDFAttrFloatAccess().getValueAssignment()); }
		(rule__URDFAttrFloat__ValueAssignment)
		{ after(grammarAccess.getURDFAttrFloatAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleURDFAttrINT
entryRuleURDFAttrINT
:
{ before(grammarAccess.getURDFAttrINTRule()); }
	 ruleURDFAttrINT
{ after(grammarAccess.getURDFAttrINTRule()); } 
	 EOF 
;

// Rule URDFAttrINT
ruleURDFAttrINT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURDFAttrINTAccess().getValueAssignment()); }
		(rule__URDFAttrINT__ValueAssignment)
		{ after(grammarAccess.getURDFAttrINTAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleURDFAttrNumeric
entryRuleURDFAttrNumeric
:
{ before(grammarAccess.getURDFAttrNumericRule()); }
	 ruleURDFAttrNumeric
{ after(grammarAccess.getURDFAttrNumericRule()); } 
	 EOF 
;

// Rule URDFAttrNumeric
ruleURDFAttrNumeric 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURDFAttrNumericAccess().getValueAssignment()); }
		(rule__URDFAttrNumeric__ValueAssignment)
		{ after(grammarAccess.getURDFAttrNumericAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleURDFAttrSTRING
entryRuleURDFAttrSTRING
:
{ before(grammarAccess.getURDFAttrSTRINGRule()); }
	 ruleURDFAttrSTRING
{ after(grammarAccess.getURDFAttrSTRINGRule()); } 
	 EOF 
;

// Rule URDFAttrSTRING
ruleURDFAttrSTRING 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURDFAttrSTRINGAccess().getValueAssignment()); }
		(rule__URDFAttrSTRING__ValueAssignment)
		{ after(grammarAccess.getURDFAttrSTRINGAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLOAT
entryRuleFLOAT
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;

// Rule FLOAT
ruleFLOAT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOATAccess().getGroup()); }
		(rule__FLOAT__Group__0)
		{ after(grammarAccess.getFLOATAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSCIENTIFIC
entryRuleSCIENTIFIC
:
{ before(grammarAccess.getSCIENTIFICRule()); }
	 ruleSCIENTIFIC
{ after(grammarAccess.getSCIENTIFICRule()); } 
	 EOF 
;

// Rule SCIENTIFIC
ruleSCIENTIFIC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSCIENTIFICAccess().getGroup()); }
		(rule__SCIENTIFIC__Group__0)
		{ after(grammarAccess.getSCIENTIFICAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIGNED_NUMERIC
entryRuleSIGNED_NUMERIC
:
{ before(grammarAccess.getSIGNED_NUMERICRule()); }
	 ruleSIGNED_NUMERIC
{ after(grammarAccess.getSIGNED_NUMERICRule()); } 
	 EOF 
;

// Rule SIGNED_NUMERIC
ruleSIGNED_NUMERIC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getGroup()); }
		(rule__SIGNED_NUMERIC__Group__0)
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMERIC
entryRuleNUMERIC
:
{ before(grammarAccess.getNUMERICRule()); }
	 ruleNUMERIC
{ after(grammarAccess.getNUMERICRule()); } 
	 EOF 
;

// Rule NUMERIC
ruleNUMERIC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMERICAccess().getAlternatives()); }
		(rule__NUMERIC__Alternatives)
		{ after(grammarAccess.getNUMERICAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule JointType
ruleJointType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointTypeAccess().getAlternatives()); }
		(rule__JointType__Alternatives)
		{ after(grammarAccess.getJointTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getGroup_2_0()); }
		(rule__Robot__Group_2_0__0)
		{ after(grammarAccess.getRobotAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRobotAccess().getLinkAssignment_2_1()); }
		(rule__Robot__LinkAssignment_2_1)
		{ after(grammarAccess.getRobotAccess().getLinkAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getRobotAccess().getJointAssignment_2_2()); }
		(rule__Robot__JointAssignment_2_2)
		{ after(grammarAccess.getRobotAccess().getJointAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getRobotAccess().getLinkrefsAssignment_2_3()); }
		(rule__Robot__LinkrefsAssignment_2_3)
		{ after(grammarAccess.getRobotAccess().getLinkrefsAssignment_2_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointRefAccess().getFixAssignment_0()); }
		(rule__JointRef__FixAssignment_0)
		{ after(grammarAccess.getJointRefAccess().getFixAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getJointRefAccess().getRevAssignment_1()); }
		(rule__JointRef__RevAssignment_1)
		{ after(grammarAccess.getJointRefAccess().getRevAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getJointRefAccess().getPrisAssignment_2()); }
		(rule__JointRef__PrisAssignment_2)
		{ after(grammarAccess.getJointRefAccess().getPrisAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getJointRefAccess().getContAssignment_3()); }
		(rule__JointRef__ContAssignment_3)
		{ after(grammarAccess.getJointRefAccess().getContAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getBoxParserRuleCall_0()); }
		ruleBox
		{ after(grammarAccess.getGeometryAccess().getBoxParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_1()); }
		ruleCylinder
		{ after(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getMeshParserRuleCall_2()); }
		ruleMesh
		{ after(grammarAccess.getGeometryAccess().getMeshParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getSphereParserRuleCall_3()); }
		ruleSphere
		{ after(grammarAccess.getGeometryAccess().getSphereParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSCIENTIFICAccess().getPlusSignKeyword_2_0()); }
		'+'
		{ after(grammarAccess.getSCIENTIFICAccess().getPlusSignKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSCIENTIFICAccess().getHyphenMinusKeyword_2_1()); }
		'-'
		{ after(grammarAccess.getSCIENTIFICAccess().getHyphenMinusKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getINTTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getFLOATParserRuleCall_1_1()); }
		ruleFLOAT
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getFLOATParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getSCIENTIFICParserRuleCall_1_2()); }
		ruleSCIENTIFIC
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getSCIENTIFICParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNUMERICAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNUMERICAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNUMERICAccess().getFLOATParserRuleCall_1()); }
		ruleFLOAT
		{ after(grammarAccess.getNUMERICAccess().getFLOATParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNUMERICAccess().getSCIENTIFICParserRuleCall_2()); }
		ruleSCIENTIFIC
		{ after(grammarAccess.getNUMERICAccess().getSCIENTIFICParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_0()); }
		('Fixed')
		{ after(grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_1()); }
		('Revolute')
		{ after(grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_2()); }
		('Prismatic')
		{ after(grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getContinuousEnumLiteralDeclaration_3()); }
		('Continuous')
		{ after(grammarAccess.getJointTypeAccess().getContinuousEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_1()); }
	(rule__Robot__NameAssignment_1)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getAlternatives_2()); }
	(rule__Robot__Alternatives_2)*
	{ after(grammarAccess.getRobotAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_2_0__0__Impl
	rule__Robot__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getTopologyKeyword_2_0_0()); }
	'Topology'
	{ after(grammarAccess.getRobotAccess().getTopologyKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getTopologiesAssignment_2_0_1()); }
	(rule__Robot__TopologiesAssignment_2_0_1)
	{ after(grammarAccess.getRobotAccess().getTopologiesAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Topology__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Topology__Group__0__Impl
	rule__Topology__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopologyAccess().getParentAssignment_0()); }
	(rule__Topology__ParentAssignment_0)
	{ after(grammarAccess.getTopologyAccess().getParentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Topology__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopologyAccess().getGroup_1()); }
	(rule__Topology__Group_1__0)?
	{ after(grammarAccess.getTopologyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Topology__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Topology__Group_1__0__Impl
	rule__Topology__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopologyAccess().getJointAssignment_1_0()); }
	(rule__Topology__JointAssignment_1_0)
	{ after(grammarAccess.getTopologyAccess().getJointAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Topology__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopologyAccess().getChildAssignment_1_1()); }
	(rule__Topology__ChildAssignment_1_1)
	{ after(grammarAccess.getTopologyAccess().getChildAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
	'Link'
	{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameAssignment_1()); }
	(rule__Link__NameAssignment_1)
	{ after(grammarAccess.getLinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_2()); }
	(rule__Link__Group_2__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getDecoratorAssignment_3()); }
	(rule__Link__DecoratorAssignment_3)
	{ after(grammarAccess.getLinkAccess().getDecoratorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_2__0__Impl
	rule__Link__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getIsReuseOfKeyword_2_0()); }
	'isReuseOf'
	{ after(grammarAccess.getLinkAccess().getIsReuseOfKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getIsReuseOfAssignment_2_1()); }
	(rule__Link__IsReuseOfAssignment_2_1)
	{ after(grammarAccess.getLinkAccess().getIsReuseOfAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkDecorator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkDecorator__Group__0__Impl
	rule__LinkDecorator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkDecoratorAccess().getLinkDecoratorAction_0()); }
	()
	{ after(grammarAccess.getLinkDecoratorAccess().getLinkDecoratorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkDecorator__Group__1__Impl
	rule__LinkDecorator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkDecoratorAccess().getInertialAssignment_1()); }
	(rule__LinkDecorator__InertialAssignment_1)*
	{ after(grammarAccess.getLinkDecoratorAccess().getInertialAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkDecorator__Group__2__Impl
	rule__LinkDecorator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkDecoratorAccess().getVisualAssignment_2()); }
	(rule__LinkDecorator__VisualAssignment_2)*
	{ after(grammarAccess.getLinkDecoratorAccess().getVisualAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkDecorator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkDecoratorAccess().getCollisionAssignment_3()); }
	(rule__LinkDecorator__CollisionAssignment_3)*
	{ after(grammarAccess.getLinkDecoratorAccess().getCollisionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkRef__Group__0__Impl
	rule__LinkRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkRefAccess().getAdd_toKeyword_0()); }
	'add_to'
	{ after(grammarAccess.getLinkRefAccess().getAdd_toKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkRef__Group__1__Impl
	rule__LinkRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkRefAccess().getRefAssignment_1()); }
	(rule__LinkRef__RefAssignment_1)
	{ after(grammarAccess.getLinkRefAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkRefAccess().getDecoratorAssignment_2()); }
	(rule__LinkRef__DecoratorAssignment_2)
	{ after(grammarAccess.getLinkRefAccess().getDecoratorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__0__Impl
	rule__Joint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getJointKeyword_0()); }
	'Joint'
	{ after(grammarAccess.getJointAccess().getJointKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__1__Impl
	rule__Joint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getNameAssignment_1()); }
	(rule__Joint__NameAssignment_1)
	{ after(grammarAccess.getJointAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__2__Impl
	rule__Joint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildOfKeyword_2()); }
	'ChildOf'
	{ after(grammarAccess.getJointAccess().getChildOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__3__Impl
	rule__Joint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildOfAssignment_3()); }
	(rule__Joint__ChildOfAssignment_3)
	{ after(grammarAccess.getJointAccess().getChildOfAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__4__Impl
	rule__Joint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentOfKeyword_4()); }
	'ParentOf'
	{ after(grammarAccess.getJointAccess().getParentOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__5__Impl
	rule__Joint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentOfAssignment_5()); }
	(rule__Joint__ParentOfAssignment_5)
	{ after(grammarAccess.getJointAccess().getParentOfAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__6__Impl
	rule__Joint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeKeyword_6()); }
	'Type'
	{ after(grammarAccess.getJointAccess().getTypeKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__7__Impl
	rule__Joint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeAssignment_7()); }
	(rule__Joint__TypeAssignment_7)
	{ after(grammarAccess.getJointAccess().getTypeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__8__Impl
	rule__Joint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_8()); }
	(rule__Joint__Group_8__0)?
	{ after(grammarAccess.getJointAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getDecoratorAssignment_9()); }
	(rule__Joint__DecoratorAssignment_9)
	{ after(grammarAccess.getJointAccess().getDecoratorAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__0__Impl
	rule__Joint__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getIsReuseOfKeyword_8_0()); }
	'isReuseOf'
	{ after(grammarAccess.getJointAccess().getIsReuseOfKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getIsReuseOfAssignment_8_1()); }
	(rule__Joint__IsReuseOfAssignment_8_1)
	{ after(grammarAccess.getJointAccess().getIsReuseOfAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JointDecorator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JointDecorator__Group__0__Impl
	rule__JointDecorator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointDecoratorAccess().getJointDecoratorAction_0()); }
	()
	{ after(grammarAccess.getJointDecoratorAccess().getJointDecoratorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JointDecorator__Group__1__Impl
	rule__JointDecorator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointDecoratorAccess().getLimitAssignment_1()); }
	(rule__JointDecorator__LimitAssignment_1)?
	{ after(grammarAccess.getJointDecoratorAccess().getLimitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JointDecorator__Group__2__Impl
	rule__JointDecorator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointDecoratorAccess().getAxisAssignment_2()); }
	(rule__JointDecorator__AxisAssignment_2)?
	{ after(grammarAccess.getJointDecoratorAccess().getAxisAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JointDecorator__Group__3__Impl
	rule__JointDecorator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointDecoratorAccess().getCalibrationAssignment_3()); }
	(rule__JointDecorator__CalibrationAssignment_3)?
	{ after(grammarAccess.getJointDecoratorAccess().getCalibrationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JointDecorator__Group__4__Impl
	rule__JointDecorator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointDecoratorAccess().getDynamicsAssignment_4()); }
	(rule__JointDecorator__DynamicsAssignment_4)?
	{ after(grammarAccess.getJointDecoratorAccess().getDynamicsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JointDecorator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointDecoratorAccess().getSafetycontrollerAssignment_5()); }
	(rule__JointDecorator__SafetycontrollerAssignment_5)?
	{ after(grammarAccess.getJointDecoratorAccess().getSafetycontrollerAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__0__Impl
	rule__Inertial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertialAction_0()); }
	()
	{ after(grammarAccess.getInertialAccess().getInertialAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__1__Impl
	rule__Inertial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertialKeyword_1()); }
	'Inertial'
	{ after(grammarAccess.getInertialAccess().getInertialKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__2__Impl
	rule__Inertial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getNameAssignment_2()); }
	(rule__Inertial__NameAssignment_2)?
	{ after(grammarAccess.getInertialAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__3__Impl
	rule__Inertial__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaAssignment_3()); }
	(rule__Inertial__InertiaAssignment_3)
	{ after(grammarAccess.getInertialAccess().getInertiaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__4__Impl
	rule__Inertial__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassAssignment_4()); }
	(rule__Inertial__MassAssignment_4)
	{ after(grammarAccess.getInertialAccess().getMassAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginAssignment_5()); }
	(rule__Inertial__OriginAssignment_5)?
	{ after(grammarAccess.getInertialAccess().getOriginAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__0__Impl
	rule__Inertia__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaKeyword_0()); }
	'Inertia'
	{ after(grammarAccess.getInertiaAccess().getInertiaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__1__Impl
	rule__Inertia__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getNameAssignment_1()); }
	(rule__Inertia__NameAssignment_1)?
	{ after(grammarAccess.getInertiaAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__2__Impl
	rule__Inertia__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxKeyword_2()); }
	'ixx'
	{ after(grammarAccess.getInertiaAccess().getIxxKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__3__Impl
	rule__Inertia__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxAssignment_3()); }
	(rule__Inertia__IxxAssignment_3)
	{ after(grammarAccess.getInertiaAccess().getIxxAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__4__Impl
	rule__Inertia__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyKeyword_4()); }
	'ixy'
	{ after(grammarAccess.getInertiaAccess().getIxyKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__5__Impl
	rule__Inertia__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyAssignment_5()); }
	(rule__Inertia__IxyAssignment_5)
	{ after(grammarAccess.getInertiaAccess().getIxyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__6__Impl
	rule__Inertia__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzKeyword_6()); }
	'ixz'
	{ after(grammarAccess.getInertiaAccess().getIxzKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__7__Impl
	rule__Inertia__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzAssignment_7()); }
	(rule__Inertia__IxzAssignment_7)
	{ after(grammarAccess.getInertiaAccess().getIxzAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__8__Impl
	rule__Inertia__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyKeyword_8()); }
	'iyy'
	{ after(grammarAccess.getInertiaAccess().getIyyKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__9__Impl
	rule__Inertia__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyAssignment_9()); }
	(rule__Inertia__IyyAssignment_9)
	{ after(grammarAccess.getInertiaAccess().getIyyAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__10__Impl
	rule__Inertia__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzKeyword_10()); }
	'iyz'
	{ after(grammarAccess.getInertiaAccess().getIyzKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__11__Impl
	rule__Inertia__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzAssignment_11()); }
	(rule__Inertia__IyzAssignment_11)
	{ after(grammarAccess.getInertiaAccess().getIyzAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__12__Impl
	rule__Inertia__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzKeyword_12()); }
	'izz'
	{ after(grammarAccess.getInertiaAccess().getIzzKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzAssignment_13()); }
	(rule__Inertia__IzzAssignment_13)
	{ after(grammarAccess.getInertiaAccess().getIzzAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__0__Impl
	rule__Visual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getVisualAction_0()); }
	()
	{ after(grammarAccess.getVisualAccess().getVisualAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__1__Impl
	rule__Visual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getVisualKeyword_1()); }
	'Visual'
	{ after(grammarAccess.getVisualAccess().getVisualKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__2__Impl
	rule__Visual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getNameAssignment_2()); }
	(rule__Visual__NameAssignment_2)?
	{ after(grammarAccess.getVisualAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__3__Impl
	rule__Visual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
	(rule__Visual__GeometryAssignment_3)*
	{ after(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginAssignment_4()); }
	(rule__Visual__OriginAssignment_4)?
	{ after(grammarAccess.getVisualAccess().getOriginAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxKeyword_0()); }
	'Box'
	{ after(grammarAccess.getBoxAccess().getBoxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getNameAssignment_1()); }
	(rule__Box__NameAssignment_1)?
	{ after(grammarAccess.getBoxAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getHeightKeyword_2()); }
	'height'
	{ after(grammarAccess.getBoxAccess().getHeightKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getHeightAssignment_3()); }
	(rule__Box__HeightAssignment_3)
	{ after(grammarAccess.getBoxAccess().getHeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__4__Impl
	rule__Box__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getLengthKeyword_4()); }
	'length'
	{ after(grammarAccess.getBoxAccess().getLengthKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__5__Impl
	rule__Box__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getLengthAssignment_5()); }
	(rule__Box__LengthAssignment_5)
	{ after(grammarAccess.getBoxAccess().getLengthAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__6__Impl
	rule__Box__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getWidthKeyword_6()); }
	'width'
	{ after(grammarAccess.getBoxAccess().getWidthKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getWidthAssignment_7()); }
	(rule__Box__WidthAssignment_7)
	{ after(grammarAccess.getBoxAccess().getWidthAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cylinder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__0__Impl
	rule__Cylinder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
	'Cylinder'
	{ after(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__1__Impl
	rule__Cylinder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getNameAssignment_1()); }
	(rule__Cylinder__NameAssignment_1)?
	{ after(grammarAccess.getCylinderAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__2__Impl
	rule__Cylinder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusKeyword_2()); }
	'radius'
	{ after(grammarAccess.getCylinderAccess().getRadiusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__3__Impl
	rule__Cylinder__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusAssignment_3()); }
	(rule__Cylinder__RadiusAssignment_3)
	{ after(grammarAccess.getCylinderAccess().getRadiusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__4__Impl
	rule__Cylinder__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthKeyword_4()); }
	'length'
	{ after(grammarAccess.getCylinderAccess().getLengthKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthAssignment_5()); }
	(rule__Cylinder__LengthAssignment_5)
	{ after(grammarAccess.getCylinderAccess().getLengthAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__0__Impl
	rule__Mesh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
	'Mesh'
	{ after(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__1__Impl
	rule__Mesh__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getNameAssignment_1()); }
	(rule__Mesh__NameAssignment_1)?
	{ after(grammarAccess.getMeshAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__2__Impl
	rule__Mesh__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getPathToFileKeyword_2()); }
	'pathToFile'
	{ after(grammarAccess.getMeshAccess().getPathToFileKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__3__Impl
	rule__Mesh__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getPathToFileAssignment_3()); }
	(rule__Mesh__PathToFileAssignment_3)
	{ after(grammarAccess.getMeshAccess().getPathToFileAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getGroup_4()); }
	(rule__Mesh__Group_4__0)?
	{ after(grammarAccess.getMeshAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__0__Impl
	rule__Mesh__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
	'scale'
	{ after(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getDimensionAssignment_4_1()); }
	(rule__Mesh__DimensionAssignment_4_1)
	{ after(grammarAccess.getMeshAccess().getDimensionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sphere__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__0__Impl
	rule__Sphere__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
	'Sphere'
	{ after(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__1__Impl
	rule__Sphere__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getNameAssignment_1()); }
	(rule__Sphere__NameAssignment_1)?
	{ after(grammarAccess.getSphereAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__2__Impl
	rule__Sphere__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
	'radius'
	{ after(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
	(rule__Sphere__RadiusAssignment_3)
	{ after(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__0__Impl
	rule__Collision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getCollisionAction_0()); }
	()
	{ after(grammarAccess.getCollisionAccess().getCollisionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__1__Impl
	rule__Collision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getCollisionKeyword_1()); }
	'Collision'
	{ after(grammarAccess.getCollisionAccess().getCollisionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__2__Impl
	rule__Collision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getNameAssignment_2()); }
	(rule__Collision__NameAssignment_2)?
	{ after(grammarAccess.getCollisionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__3__Impl
	rule__Collision__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
	(rule__Collision__GeometryAssignment_3)*
	{ after(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginAssignment_4()); }
	(rule__Collision__OriginAssignment_4)?
	{ after(grammarAccess.getCollisionAccess().getOriginAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__0__Impl
	rule__Origin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getOriginKeyword_0()); }
	'Origin'
	{ after(grammarAccess.getOriginAccess().getOriginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__1__Impl
	rule__Origin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getNameAssignment_1()); }
	(rule__Origin__NameAssignment_1)?
	{ after(grammarAccess.getOriginAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__2__Impl
	rule__Origin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getXKeyword_2()); }
	'x'
	{ after(grammarAccess.getOriginAccess().getXKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__3__Impl
	rule__Origin__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getXAssignment_3()); }
	(rule__Origin__XAssignment_3)
	{ after(grammarAccess.getOriginAccess().getXAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__4__Impl
	rule__Origin__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYKeyword_4()); }
	'y'
	{ after(grammarAccess.getOriginAccess().getYKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__5__Impl
	rule__Origin__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYAssignment_5()); }
	(rule__Origin__YAssignment_5)
	{ after(grammarAccess.getOriginAccess().getYAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__6__Impl
	rule__Origin__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getZKeyword_6()); }
	'z'
	{ after(grammarAccess.getOriginAccess().getZKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__7__Impl
	rule__Origin__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getZAssignment_7()); }
	(rule__Origin__ZAssignment_7)
	{ after(grammarAccess.getOriginAccess().getZAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__8__Impl
	rule__Origin__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_8()); }
	(rule__Origin__Group_8__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__9__Impl
	rule__Origin__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_9()); }
	(rule__Origin__Group_9__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_10()); }
	(rule__Origin__Group_10__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_8__0__Impl
	rule__Origin__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getRollKeyword_8_0()); }
	'roll'
	{ after(grammarAccess.getOriginAccess().getRollKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getRollAssignment_8_1()); }
	(rule__Origin__RollAssignment_8_1)
	{ after(grammarAccess.getOriginAccess().getRollAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_9__0__Impl
	rule__Origin__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getPitchKeyword_9_0()); }
	'pitch'
	{ after(grammarAccess.getOriginAccess().getPitchKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getPitchAssignment_9_1()); }
	(rule__Origin__PitchAssignment_9_1)
	{ after(grammarAccess.getOriginAccess().getPitchAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_10__0__Impl
	rule__Origin__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYawKeyword_10_0()); }
	'yaw'
	{ after(grammarAccess.getOriginAccess().getYawKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYawAssignment_10_1()); }
	(rule__Origin__YawAssignment_10_1)
	{ after(grammarAccess.getOriginAccess().getYawAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassKeyword_0()); }
	'Mass'
	{ after(grammarAccess.getMassAccess().getMassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__1__Impl
	rule__Mass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getNameAssignment_1()); }
	(rule__Mass__NameAssignment_1)?
	{ after(grammarAccess.getMassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__2__Impl
	rule__Mass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMass_ValueInKilogramsKeyword_2()); }
	'mass_(ValueInKilograms)'
	{ after(grammarAccess.getMassAccess().getMass_ValueInKilogramsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassValueInKilogramsAssignment_3()); }
	(rule__Mass__MassValueInKilogramsAssignment_3)
	{ after(grammarAccess.getMassAccess().getMassValueInKilogramsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getColorKeyword_0()); }
	'Color'
	{ after(grammarAccess.getColorAccess().getColorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__1__Impl
	rule__Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getNameAssignment_1()); }
	(rule__Color__NameAssignment_1)?
	{ after(grammarAccess.getColorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__2__Impl
	rule__Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRedKeyword_2()); }
	'red'
	{ after(grammarAccess.getColorAccess().getRedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__3__Impl
	rule__Color__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRedAssignment_3()); }
	(rule__Color__RedAssignment_3)
	{ after(grammarAccess.getColorAccess().getRedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__4__Impl
	rule__Color__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getGreenKeyword_4()); }
	'green'
	{ after(grammarAccess.getColorAccess().getGreenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__5__Impl
	rule__Color__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getGreenAssignment_5()); }
	(rule__Color__GreenAssignment_5)
	{ after(grammarAccess.getColorAccess().getGreenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__6__Impl
	rule__Color__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getBlueKeyword_6()); }
	'blue'
	{ after(grammarAccess.getColorAccess().getBlueKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__7__Impl
	rule__Color__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getBlueAssignment_7()); }
	(rule__Color__BlueAssignment_7)
	{ after(grammarAccess.getColorAccess().getBlueAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__8__Impl
	rule__Color__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getAlphaKeyword_8()); }
	'alpha'
	{ after(grammarAccess.getColorAccess().getAlphaKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getAlphaAssignment_9()); }
	(rule__Color__AlphaAssignment_9)
	{ after(grammarAccess.getColorAccess().getAlphaAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Texture__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__0__Impl
	rule__Texture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getTextureKeyword_0()); }
	'Texture'
	{ after(grammarAccess.getTextureAccess().getTextureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__1__Impl
	rule__Texture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getNameAssignment_1()); }
	(rule__Texture__NameAssignment_1)?
	{ after(grammarAccess.getTextureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__2__Impl
	rule__Texture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getPathToFileKeyword_2()); }
	'pathToFile'
	{ after(grammarAccess.getTextureAccess().getPathToFileKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getPathToFileAssignment_3()); }
	(rule__Texture__PathToFileAssignment_3)
	{ after(grammarAccess.getTextureAccess().getPathToFileAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__0__Impl
	rule__Limit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLimitKeyword_0()); }
	'Limit'
	{ after(grammarAccess.getLimitAccess().getLimitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__1__Impl
	rule__Limit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getNameAssignment_1()); }
	(rule__Limit__NameAssignment_1)?
	{ after(grammarAccess.getLimitAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__2__Impl
	rule__Limit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortKeyword_2()); }
	'effort'
	{ after(grammarAccess.getLimitAccess().getEffortKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__3__Impl
	rule__Limit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortAssignment_3()); }
	(rule__Limit__EffortAssignment_3)
	{ after(grammarAccess.getLimitAccess().getEffortAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__4__Impl
	rule__Limit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityKeyword_4()); }
	'velocity'
	{ after(grammarAccess.getLimitAccess().getVelocityKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__5__Impl
	rule__Limit__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityAssignment_5()); }
	(rule__Limit__VelocityAssignment_5)
	{ after(grammarAccess.getLimitAccess().getVelocityAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__6__Impl
	rule__Limit__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerKeyword_6()); }
	'lower'
	{ after(grammarAccess.getLimitAccess().getLowerKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__7__Impl
	rule__Limit__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerAssignment_7()); }
	(rule__Limit__LowerAssignment_7)?
	{ after(grammarAccess.getLimitAccess().getLowerAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__8__Impl
	rule__Limit__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperKeyword_8()); }
	'upper'
	{ after(grammarAccess.getLimitAccess().getUpperKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperAssignment_9()); }
	(rule__Limit__UpperAssignment_9)?
	{ after(grammarAccess.getLimitAccess().getUpperAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__0__Impl
	rule__Axis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getAxisKeyword_0()); }
	'Axis'
	{ after(grammarAccess.getAxisAccess().getAxisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__1__Impl
	rule__Axis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getNameAssignment_1()); }
	(rule__Axis__NameAssignment_1)?
	{ after(grammarAccess.getAxisAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__2__Impl
	rule__Axis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXKeyword_2()); }
	'x'
	{ after(grammarAccess.getAxisAccess().getXKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__3__Impl
	rule__Axis__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXAssignment_3()); }
	(rule__Axis__XAssignment_3)
	{ after(grammarAccess.getAxisAccess().getXAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__4__Impl
	rule__Axis__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getYKeyword_4()); }
	'y'
	{ after(grammarAccess.getAxisAccess().getYKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__5__Impl
	rule__Axis__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getYAssignment_5()); }
	(rule__Axis__YAssignment_5)
	{ after(grammarAccess.getAxisAccess().getYAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__6__Impl
	rule__Axis__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getZKeyword_6()); }
	'z'
	{ after(grammarAccess.getAxisAccess().getZKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getZAssignment_7()); }
	(rule__Axis__ZAssignment_7)
	{ after(grammarAccess.getAxisAccess().getZAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calibration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__0__Impl
	rule__Calibration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCalibrationAction_0()); }
	()
	{ after(grammarAccess.getCalibrationAccess().getCalibrationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__1__Impl
	rule__Calibration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCalibrationKeyword_1()); }
	'Calibration'
	{ after(grammarAccess.getCalibrationAccess().getCalibrationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__2__Impl
	rule__Calibration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getNameAssignment_2()); }
	(rule__Calibration__NameAssignment_2)?
	{ after(grammarAccess.getCalibrationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__3__Impl
	rule__Calibration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getGroup_3()); }
	(rule__Calibration__Group_3__0)?
	{ after(grammarAccess.getCalibrationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getGroup_4()); }
	(rule__Calibration__Group_4__0)?
	{ after(grammarAccess.getCalibrationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calibration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_3__0__Impl
	rule__Calibration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getRisingKeyword_3_0()); }
	'rising'
	{ after(grammarAccess.getCalibrationAccess().getRisingKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getRisingAssignment_3_1()); }
	(rule__Calibration__RisingAssignment_3_1)
	{ after(grammarAccess.getCalibrationAccess().getRisingAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calibration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_4__0__Impl
	rule__Calibration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getFallingKeyword_4_0()); }
	'falling'
	{ after(grammarAccess.getCalibrationAccess().getFallingKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getFallingAssignment_4_1()); }
	(rule__Calibration__FallingAssignment_4_1)
	{ after(grammarAccess.getCalibrationAccess().getFallingAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__0__Impl
	rule__Dynamics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDynamicsAction_0()); }
	()
	{ after(grammarAccess.getDynamicsAccess().getDynamicsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__1__Impl
	rule__Dynamics__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDynamicsKeyword_1()); }
	'Dynamics'
	{ after(grammarAccess.getDynamicsAccess().getDynamicsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__2__Impl
	rule__Dynamics__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getNameAssignment_2()); }
	(rule__Dynamics__NameAssignment_2)?
	{ after(grammarAccess.getDynamicsAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__3__Impl
	rule__Dynamics__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getGroup_3()); }
	(rule__Dynamics__Group_3__0)?
	{ after(grammarAccess.getDynamicsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getGroup_4()); }
	(rule__Dynamics__Group_4__0)?
	{ after(grammarAccess.getDynamicsAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_3__0__Impl
	rule__Dynamics__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getFrictionKeyword_3_0()); }
	'friction'
	{ after(grammarAccess.getDynamicsAccess().getFrictionKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getFrictionAssignment_3_1()); }
	(rule__Dynamics__FrictionAssignment_3_1)
	{ after(grammarAccess.getDynamicsAccess().getFrictionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_4__0__Impl
	rule__Dynamics__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDampingKeyword_4_0()); }
	'damping'
	{ after(grammarAccess.getDynamicsAccess().getDampingKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDampingAssignment_4_1()); }
	(rule__Dynamics__DampingAssignment_4_1)
	{ after(grammarAccess.getDynamicsAccess().getDampingAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__0__Impl
	rule__SafetyController__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSafetyControllerKeyword_0()); }
	'SafetyController'
	{ after(grammarAccess.getSafetyControllerAccess().getSafetyControllerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__1__Impl
	rule__SafetyController__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getNameAssignment_1()); }
	(rule__SafetyController__NameAssignment_1)?
	{ after(grammarAccess.getSafetyControllerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__2__Impl
	rule__SafetyController__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_2()); }
	(rule__SafetyController__Group_2__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__3__Impl
	rule__SafetyController__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_3()); }
	(rule__SafetyController__Group_3__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__4__Impl
	rule__SafetyController__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_4()); }
	(rule__SafetyController__Group_4__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__5__Impl
	rule__SafetyController__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_5()); }
	'k_velocity'
	{ after(grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_6()); }
	(rule__SafetyController__K_velocityAssignment_6)
	{ after(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_2__0__Impl
	rule__SafetyController__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_2_0()); }
	'softLowerLimit'
	{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_2_1()); }
	(rule__SafetyController__SoftLowerLimitAssignment_2_1)
	{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_3__0__Impl
	rule__SafetyController__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_3_0()); }
	'softUpperLimit'
	{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_3_1()); }
	(rule__SafetyController__SoftUpperLimitAssignment_3_1)
	{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_4__0__Impl
	rule__SafetyController__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_positionKeyword_4_0()); }
	'k_position'
	{ after(grammarAccess.getSafetyControllerAccess().getK_positionKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_4_1()); }
	(rule__SafetyController__K_positionAssignment_4_1)
	{ after(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__0__Impl
	rule__FLOAT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__1__Impl
	rule__FLOAT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SCIENTIFIC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__0__Impl
	rule__SCIENTIFIC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getFLOATParserRuleCall_0()); }
	ruleFLOAT
	{ after(grammarAccess.getSCIENTIFICAccess().getFLOATParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__1__Impl
	rule__SCIENTIFIC__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getEKeyword_1()); }
	'e'
	{ after(grammarAccess.getSCIENTIFICAccess().getEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__2__Impl
	rule__SCIENTIFIC__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getAlternatives_2()); }
	(rule__SCIENTIFIC__Alternatives_2)?
	{ after(grammarAccess.getSCIENTIFICAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getSCIENTIFICAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIGNED_NUMERIC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIGNED_NUMERIC__Group__0__Impl
	rule__SIGNED_NUMERIC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIGNED_NUMERICAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getSIGNED_NUMERICAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIGNED_NUMERIC__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIGNED_NUMERICAccess().getAlternatives_1()); }
	(rule__SIGNED_NUMERIC__Alternatives_1)
	{ after(grammarAccess.getSIGNED_NUMERICAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__TopologiesAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getTopologiesTopologyParserRuleCall_2_0_1_0()); }
		ruleTopology
		{ after(grammarAccess.getRobotAccess().getTopologiesTopologyParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__LinkAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_2_1_0()); }
		ruleLink
		{ after(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__JointAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getJointJointParserRuleCall_2_2_0()); }
		ruleJoint
		{ after(grammarAccess.getRobotAccess().getJointJointParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__LinkrefsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getLinkrefsLinkRefParserRuleCall_2_3_0()); }
		ruleLinkRef
		{ after(grammarAccess.getRobotAccess().getLinkrefsLinkRefParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__ParentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopologyAccess().getParentLinkCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTopologyAccess().getParentLinkIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTopologyAccess().getParentLinkIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTopologyAccess().getParentLinkCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__JointAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopologyAccess().getJointJointRefParserRuleCall_1_0_0()); }
		ruleJointRef
		{ after(grammarAccess.getTopologyAccess().getJointJointRefParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topology__ChildAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopologyAccess().getChildTopologyParserRuleCall_1_1_0()); }
		ruleTopology
		{ after(grammarAccess.getTopologyAccess().getChildTopologyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__IsReuseOfAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getIsReuseOfLinkCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getLinkAccess().getIsReuseOfLinkIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLinkAccess().getIsReuseOfLinkIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getLinkAccess().getIsReuseOfLinkCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__DecoratorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getDecoratorLinkDecoratorParserRuleCall_3_0()); }
		ruleLinkDecorator
		{ after(grammarAccess.getLinkAccess().getDecoratorLinkDecoratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__InertialAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkDecoratorAccess().getInertialInertialParserRuleCall_1_0()); }
		ruleInertial
		{ after(grammarAccess.getLinkDecoratorAccess().getInertialInertialParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__VisualAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkDecoratorAccess().getVisualVisualParserRuleCall_2_0()); }
		ruleVisual
		{ after(grammarAccess.getLinkDecoratorAccess().getVisualVisualParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkDecorator__CollisionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkDecoratorAccess().getCollisionCollisionParserRuleCall_3_0()); }
		ruleCollision
		{ after(grammarAccess.getLinkDecoratorAccess().getCollisionCollisionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkRef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkRefAccess().getRefLinkCrossReference_1_0()); }
		(
			{ before(grammarAccess.getLinkRefAccess().getRefLinkIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLinkRefAccess().getRefLinkIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getLinkRefAccess().getRefLinkCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkRef__DecoratorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkRefAccess().getDecoratorLinkDecoratorParserRuleCall_2_0()); }
		ruleLinkDecorator
		{ after(grammarAccess.getLinkRefAccess().getDecoratorLinkDecoratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ChildOfAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getChildOfLinkCrossReference_3_0()); }
		(
			{ before(grammarAccess.getJointAccess().getChildOfLinkIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJointAccess().getChildOfLinkIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getChildOfLinkCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ParentOfAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getParentOfLinkCrossReference_5_0()); }
		(
			{ before(grammarAccess.getJointAccess().getParentOfLinkIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJointAccess().getParentOfLinkIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getParentOfLinkCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__TypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_7_0()); }
		ruleJointType
		{ after(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__IsReuseOfAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getIsReuseOfJointCrossReference_8_1_0()); }
		(
			{ before(grammarAccess.getJointAccess().getIsReuseOfJointIDTerminalRuleCall_8_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJointAccess().getIsReuseOfJointIDTerminalRuleCall_8_1_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getIsReuseOfJointCrossReference_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__DecoratorAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getDecoratorJointDecoratorParserRuleCall_9_0()); }
		ruleJointDecorator
		{ after(grammarAccess.getJointAccess().getDecoratorJointDecoratorParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__LimitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointDecoratorAccess().getLimitLimitParserRuleCall_1_0()); }
		ruleLimit
		{ after(grammarAccess.getJointDecoratorAccess().getLimitLimitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__AxisAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointDecoratorAccess().getAxisAxisParserRuleCall_2_0()); }
		ruleAxis
		{ after(grammarAccess.getJointDecoratorAccess().getAxisAxisParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__CalibrationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointDecoratorAccess().getCalibrationCalibrationParserRuleCall_3_0()); }
		ruleCalibration
		{ after(grammarAccess.getJointDecoratorAccess().getCalibrationCalibrationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__DynamicsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointDecoratorAccess().getDynamicsDynamicsParserRuleCall_4_0()); }
		ruleDynamics
		{ after(grammarAccess.getJointDecoratorAccess().getDynamicsDynamicsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointDecorator__SafetycontrollerAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointDecoratorAccess().getSafetycontrollerSafetyControllerParserRuleCall_5_0()); }
		ruleSafetyController
		{ after(grammarAccess.getJointDecoratorAccess().getSafetycontrollerSafetyControllerParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointRef__FixAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointRefAccess().getFixHyphenMinusGreaterThanSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getJointRefAccess().getFixHyphenMinusGreaterThanSignKeyword_0_0()); }
			'->'
			{ after(grammarAccess.getJointRefAccess().getFixHyphenMinusGreaterThanSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getJointRefAccess().getFixHyphenMinusGreaterThanSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointRef__RevAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointRefAccess().getRevRKeyword_1_0()); }
		(
			{ before(grammarAccess.getJointRefAccess().getRevRKeyword_1_0()); }
			'r->'
			{ after(grammarAccess.getJointRefAccess().getRevRKeyword_1_0()); }
		)
		{ after(grammarAccess.getJointRefAccess().getRevRKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointRef__PrisAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointRefAccess().getPrisPKeyword_2_0()); }
		(
			{ before(grammarAccess.getJointRefAccess().getPrisPKeyword_2_0()); }
			'p->'
			{ after(grammarAccess.getJointRefAccess().getPrisPKeyword_2_0()); }
		)
		{ after(grammarAccess.getJointRefAccess().getPrisPKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointRef__ContAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointRefAccess().getContCKeyword_3_0()); }
		(
			{ before(grammarAccess.getJointRefAccess().getContCKeyword_3_0()); }
			'c->'
			{ after(grammarAccess.getJointRefAccess().getContCKeyword_3_0()); }
		)
		{ after(grammarAccess.getJointRefAccess().getContCKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInertialAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__InertiaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_0()); }
		ruleInertia
		{ after(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__MassAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getMassMassParserRuleCall_4_0()); }
		ruleMass
		{ after(grammarAccess.getInertialAccess().getMassMassParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__OriginAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_5_0()); }
		ruleOrigin
		{ after(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInertiaAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxxAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxxURDFAttrSignedNumericParserRuleCall_3_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getInertiaAccess().getIxxURDFAttrSignedNumericParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxyURDFAttrSignedNumericParserRuleCall_5_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getInertiaAccess().getIxyURDFAttrSignedNumericParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxzAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxzURDFAttrSignedNumericParserRuleCall_7_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getInertiaAccess().getIxzURDFAttrSignedNumericParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyyAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyyURDFAttrSignedNumericParserRuleCall_9_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getInertiaAccess().getIyyURDFAttrSignedNumericParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyzAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyzURDFAttrSignedNumericParserRuleCall_11_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getInertiaAccess().getIyzURDFAttrSignedNumericParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IzzAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIzzURDFAttrSignedNumericParserRuleCall_13_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getInertiaAccess().getIzzURDFAttrSignedNumericParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVisualAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__OriginAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_4_0()); }
		ruleOrigin
		{ after(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBoxAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__HeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getHeightURDFAttrNumericParserRuleCall_3_0()); }
		ruleURDFAttrNumeric
		{ after(grammarAccess.getBoxAccess().getHeightURDFAttrNumericParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__LengthAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getLengthURDFAttrNumericParserRuleCall_5_0()); }
		ruleURDFAttrNumeric
		{ after(grammarAccess.getBoxAccess().getLengthURDFAttrNumericParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__WidthAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getWidthURDFAttrNumericParserRuleCall_7_0()); }
		ruleURDFAttrNumeric
		{ after(grammarAccess.getBoxAccess().getWidthURDFAttrNumericParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCylinderAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__RadiusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getRadiusURDFAttrNumericParserRuleCall_3_0()); }
		ruleURDFAttrNumeric
		{ after(grammarAccess.getCylinderAccess().getRadiusURDFAttrNumericParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__LengthAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getLengthURDFAttrNumericParserRuleCall_5_0()); }
		ruleURDFAttrNumeric
		{ after(grammarAccess.getCylinderAccess().getLengthURDFAttrNumericParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMeshAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__PathToFileAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getPathToFileURDFAttrSTRINGParserRuleCall_3_0()); }
		ruleURDFAttrSTRING
		{ after(grammarAccess.getMeshAccess().getPathToFileURDFAttrSTRINGParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__DimensionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getDimensionBoxParserRuleCall_4_1_0()); }
		ruleBox
		{ after(grammarAccess.getMeshAccess().getDimensionBoxParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSphereAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__RadiusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getRadiusURDFAttrNumericParserRuleCall_3_0()); }
		ruleURDFAttrNumeric
		{ after(grammarAccess.getSphereAccess().getRadiusURDFAttrNumericParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCollisionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__OriginAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_4_0()); }
		ruleOrigin
		{ after(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOriginAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__XAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getXURDFAttrSignedNumericParserRuleCall_3_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getOriginAccess().getXURDFAttrSignedNumericParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__YAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getYURDFAttrSignedNumericParserRuleCall_5_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getOriginAccess().getYURDFAttrSignedNumericParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__ZAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getZURDFAttrSignedNumericParserRuleCall_7_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getOriginAccess().getZURDFAttrSignedNumericParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__RollAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getRollURDFAttrSignedNumericParserRuleCall_8_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getOriginAccess().getRollURDFAttrSignedNumericParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__PitchAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getPitchURDFAttrSignedNumericParserRuleCall_9_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getOriginAccess().getPitchURDFAttrSignedNumericParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__YawAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getYawURDFAttrSignedNumericParserRuleCall_10_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getOriginAccess().getYawURDFAttrSignedNumericParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMassAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMassAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__MassValueInKilogramsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMassAccess().getMassValueInKilogramsURDFAttrNumericParserRuleCall_3_0()); }
		ruleURDFAttrNumeric
		{ after(grammarAccess.getMassAccess().getMassValueInKilogramsURDFAttrNumericParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getColorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRedURDFAttrFloatParserRuleCall_3_0()); }
		ruleURDFAttrFloat
		{ after(grammarAccess.getColorAccess().getRedURDFAttrFloatParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GreenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getGreenURDFAttrFloatParserRuleCall_5_0()); }
		ruleURDFAttrFloat
		{ after(grammarAccess.getColorAccess().getGreenURDFAttrFloatParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BlueAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBlueURDFAttrFloatParserRuleCall_7_0()); }
		ruleURDFAttrFloat
		{ after(grammarAccess.getColorAccess().getBlueURDFAttrFloatParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__AlphaAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getAlphaURDFAttrFloatParserRuleCall_9_0()); }
		ruleURDFAttrFloat
		{ after(grammarAccess.getColorAccess().getAlphaURDFAttrFloatParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextureAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTextureAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__PathToFileAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextureAccess().getPathToFileURDFAttrSTRINGParserRuleCall_3_0()); }
		ruleURDFAttrSTRING
		{ after(grammarAccess.getTextureAccess().getPathToFileURDFAttrSTRINGParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLimitAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__EffortAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getEffortURDFAttrSignedNumericParserRuleCall_3_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getLimitAccess().getEffortURDFAttrSignedNumericParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__VelocityAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getVelocityURDFAttrSignedNumericParserRuleCall_5_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getLimitAccess().getVelocityURDFAttrSignedNumericParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__LowerAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getLowerURDFAttrSignedNumericParserRuleCall_7_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getLimitAccess().getLowerURDFAttrSignedNumericParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__UpperAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getUpperURDFAttrSignedNumericParserRuleCall_9_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getLimitAccess().getUpperURDFAttrSignedNumericParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAxisAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__XAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getXURDFAttrINTParserRuleCall_3_0()); }
		ruleURDFAttrINT
		{ after(grammarAccess.getAxisAccess().getXURDFAttrINTParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__YAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getYURDFAttrINTParserRuleCall_5_0()); }
		ruleURDFAttrINT
		{ after(grammarAccess.getAxisAccess().getYURDFAttrINTParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__ZAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getZURDFAttrINTParserRuleCall_7_0()); }
		ruleURDFAttrINT
		{ after(grammarAccess.getAxisAccess().getZURDFAttrINTParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCalibrationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__RisingAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getRisingURDFAttrSignedNumericParserRuleCall_3_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getCalibrationAccess().getRisingURDFAttrSignedNumericParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__FallingAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getFallingURDFAttrSignedNumericParserRuleCall_4_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getCalibrationAccess().getFallingURDFAttrSignedNumericParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDynamicsAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__FrictionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getFrictionURDFAttrSignedNumericParserRuleCall_3_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getDynamicsAccess().getFrictionURDFAttrSignedNumericParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__DampingAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getDampingURDFAttrSignedNumericParserRuleCall_4_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getDynamicsAccess().getDampingURDFAttrSignedNumericParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSafetyControllerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__SoftLowerLimitAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitURDFAttrSignedNumericParserRuleCall_2_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitURDFAttrSignedNumericParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__SoftUpperLimitAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitURDFAttrSignedNumericParserRuleCall_3_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitURDFAttrSignedNumericParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__K_positionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getK_positionURDFAttrSignedNumericParserRuleCall_4_1_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getSafetyControllerAccess().getK_positionURDFAttrSignedNumericParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__K_velocityAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getK_velocityURDFAttrSignedNumericParserRuleCall_6_0()); }
		ruleURDFAttrSignedNumeric
		{ after(grammarAccess.getSafetyControllerAccess().getK_velocityURDFAttrSignedNumericParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URDFAttrSignedNumeric__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURDFAttrSignedNumericAccess().getValueSIGNED_NUMERICParserRuleCall_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getURDFAttrSignedNumericAccess().getValueSIGNED_NUMERICParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URDFAttrFloat__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURDFAttrFloatAccess().getValueFLOATParserRuleCall_0()); }
		ruleFLOAT
		{ after(grammarAccess.getURDFAttrFloatAccess().getValueFLOATParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URDFAttrINT__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURDFAttrINTAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getURDFAttrINTAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URDFAttrNumeric__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURDFAttrNumericAccess().getValueNUMERICParserRuleCall_0()); }
		ruleNUMERIC
		{ after(grammarAccess.getURDFAttrNumericAccess().getValueNUMERICParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URDFAttrSTRING__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURDFAttrSTRINGAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getURDFAttrSTRINGAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
