/*
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtext.urdf.ide.contentassist.antlr.internal.InternalDslParser;
import org.xtext.urdf.services.DslGrammarAccess;

public class DslParser extends AbstractContentAssistParser {

	@Inject
	private DslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalDslParser createParser() {
		InternalDslParser result = new InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRobotAccess().getAlternatives_2(), "rule__Robot__Alternatives_2");
					put(grammarAccess.getJointRefAccess().getAlternatives(), "rule__JointRef__Alternatives");
					put(grammarAccess.getGeometryAccess().getAlternatives(), "rule__Geometry__Alternatives");
					put(grammarAccess.getMaterialAccess().getAlternatives(), "rule__Material__Alternatives");
					put(grammarAccess.getSCIENTIFICAccess().getAlternatives_2(), "rule__SCIENTIFIC__Alternatives_2");
					put(grammarAccess.getSIGNED_NUMERICAccess().getAlternatives_1(), "rule__SIGNED_NUMERIC__Alternatives_1");
					put(grammarAccess.getNUMERICAccess().getAlternatives(), "rule__NUMERIC__Alternatives");
					put(grammarAccess.getJointTypeAccess().getAlternatives(), "rule__JointType__Alternatives");
					put(grammarAccess.getRobotAccess().getGroup(), "rule__Robot__Group__0");
					put(grammarAccess.getRobotAccess().getGroup_2_0(), "rule__Robot__Group_2_0__0");
					put(grammarAccess.getTopologyAccess().getGroup(), "rule__Topology__Group__0");
					put(grammarAccess.getTopologyAccess().getGroup_1(), "rule__Topology__Group_1__0");
					put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
					put(grammarAccess.getLinkAccess().getGroup_2(), "rule__Link__Group_2__0");
					put(grammarAccess.getLinkDecoratorAccess().getGroup(), "rule__LinkDecorator__Group__0");
					put(grammarAccess.getLinkRefAccess().getGroup(), "rule__LinkRef__Group__0");
					put(grammarAccess.getJointAccess().getGroup(), "rule__Joint__Group__0");
					put(grammarAccess.getJointAccess().getGroup_8(), "rule__Joint__Group_8__0");
					put(grammarAccess.getJointDecoratorAccess().getGroup(), "rule__JointDecorator__Group__0");
					put(grammarAccess.getJointDecoRefAccess().getGroup(), "rule__JointDecoRef__Group__0");
					put(grammarAccess.getInertialAccess().getGroup(), "rule__Inertial__Group__0");
					put(grammarAccess.getInertiaAccess().getGroup(), "rule__Inertia__Group__0");
					put(grammarAccess.getVisualAccess().getGroup(), "rule__Visual__Group__0");
					put(grammarAccess.getBoxAccess().getGroup(), "rule__Box__Group__0");
					put(grammarAccess.getCylinderAccess().getGroup(), "rule__Cylinder__Group__0");
					put(grammarAccess.getMeshAccess().getGroup(), "rule__Mesh__Group__0");
					put(grammarAccess.getMeshAccess().getGroup_4(), "rule__Mesh__Group_4__0");
					put(grammarAccess.getSphereAccess().getGroup(), "rule__Sphere__Group__0");
					put(grammarAccess.getCollisionAccess().getGroup(), "rule__Collision__Group__0");
					put(grammarAccess.getOriginAccess().getGroup(), "rule__Origin__Group__0");
					put(grammarAccess.getOriginAccess().getGroup_8(), "rule__Origin__Group_8__0");
					put(grammarAccess.getOriginAccess().getGroup_9(), "rule__Origin__Group_9__0");
					put(grammarAccess.getOriginAccess().getGroup_10(), "rule__Origin__Group_10__0");
					put(grammarAccess.getMassAccess().getGroup(), "rule__Mass__Group__0");
					put(grammarAccess.getColorAccess().getGroup(), "rule__Color__Group__0");
					put(grammarAccess.getTextureAccess().getGroup(), "rule__Texture__Group__0");
					put(grammarAccess.getLimitAccess().getGroup(), "rule__Limit__Group__0");
					put(grammarAccess.getAxisAccess().getGroup(), "rule__Axis__Group__0");
					put(grammarAccess.getCalibrationAccess().getGroup(), "rule__Calibration__Group__0");
					put(grammarAccess.getCalibrationAccess().getGroup_3(), "rule__Calibration__Group_3__0");
					put(grammarAccess.getCalibrationAccess().getGroup_4(), "rule__Calibration__Group_4__0");
					put(grammarAccess.getDynamicsAccess().getGroup(), "rule__Dynamics__Group__0");
					put(grammarAccess.getDynamicsAccess().getGroup_3(), "rule__Dynamics__Group_3__0");
					put(grammarAccess.getDynamicsAccess().getGroup_4(), "rule__Dynamics__Group_4__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup(), "rule__SafetyController__Group__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup_2(), "rule__SafetyController__Group_2__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup_3(), "rule__SafetyController__Group_3__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup_4(), "rule__SafetyController__Group_4__0");
					put(grammarAccess.getFLOATAccess().getGroup(), "rule__FLOAT__Group__0");
					put(grammarAccess.getSCIENTIFICAccess().getGroup(), "rule__SCIENTIFIC__Group__0");
					put(grammarAccess.getSIGNED_NUMERICAccess().getGroup(), "rule__SIGNED_NUMERIC__Group__0");
					put(grammarAccess.getRobotAccess().getNameAssignment_1(), "rule__Robot__NameAssignment_1");
					put(grammarAccess.getRobotAccess().getTopologiesAssignment_2_0_1(), "rule__Robot__TopologiesAssignment_2_0_1");
					put(grammarAccess.getRobotAccess().getLinkAssignment_2_1(), "rule__Robot__LinkAssignment_2_1");
					put(grammarAccess.getRobotAccess().getJointAssignment_2_2(), "rule__Robot__JointAssignment_2_2");
					put(grammarAccess.getRobotAccess().getLinkrefsAssignment_2_3(), "rule__Robot__LinkrefsAssignment_2_3");
					put(grammarAccess.getTopologyAccess().getParentAssignment_0(), "rule__Topology__ParentAssignment_0");
					put(grammarAccess.getTopologyAccess().getJointAssignment_1_0(), "rule__Topology__JointAssignment_1_0");
					put(grammarAccess.getTopologyAccess().getChildAssignment_1_1(), "rule__Topology__ChildAssignment_1_1");
					put(grammarAccess.getLinkAccess().getNameAssignment_1(), "rule__Link__NameAssignment_1");
					put(grammarAccess.getLinkAccess().getIsReuseOfAssignment_2_1(), "rule__Link__IsReuseOfAssignment_2_1");
					put(grammarAccess.getLinkAccess().getDecoratorAssignment_3(), "rule__Link__DecoratorAssignment_3");
					put(grammarAccess.getLinkDecoratorAccess().getInertialAssignment_1(), "rule__LinkDecorator__InertialAssignment_1");
					put(grammarAccess.getLinkDecoratorAccess().getVisualAssignment_2(), "rule__LinkDecorator__VisualAssignment_2");
					put(grammarAccess.getLinkDecoratorAccess().getCollisionAssignment_3(), "rule__LinkDecorator__CollisionAssignment_3");
					put(grammarAccess.getLinkRefAccess().getRefAssignment_1(), "rule__LinkRef__RefAssignment_1");
					put(grammarAccess.getLinkRefAccess().getDecoratorAssignment_2(), "rule__LinkRef__DecoratorAssignment_2");
					put(grammarAccess.getJointAccess().getNameAssignment_1(), "rule__Joint__NameAssignment_1");
					put(grammarAccess.getJointAccess().getChildOfAssignment_3(), "rule__Joint__ChildOfAssignment_3");
					put(grammarAccess.getJointAccess().getParentOfAssignment_5(), "rule__Joint__ParentOfAssignment_5");
					put(grammarAccess.getJointAccess().getTypeAssignment_7(), "rule__Joint__TypeAssignment_7");
					put(grammarAccess.getJointAccess().getIsReuseOfAssignment_8_1(), "rule__Joint__IsReuseOfAssignment_8_1");
					put(grammarAccess.getJointAccess().getDecoratorAssignment_9(), "rule__Joint__DecoratorAssignment_9");
					put(grammarAccess.getJointDecoratorAccess().getLimitAssignment_1(), "rule__JointDecorator__LimitAssignment_1");
					put(grammarAccess.getJointDecoratorAccess().getAxisAssignment_2(), "rule__JointDecorator__AxisAssignment_2");
					put(grammarAccess.getJointDecoratorAccess().getCalibrationAssignment_3(), "rule__JointDecorator__CalibrationAssignment_3");
					put(grammarAccess.getJointDecoratorAccess().getDynamicsAssignment_4(), "rule__JointDecorator__DynamicsAssignment_4");
					put(grammarAccess.getJointDecoratorAccess().getSafetycontrollerAssignment_5(), "rule__JointDecorator__SafetycontrollerAssignment_5");
					put(grammarAccess.getJointDecoRefAccess().getRefAssignment_1(), "rule__JointDecoRef__RefAssignment_1");
					put(grammarAccess.getJointDecoRefAccess().getDecoratorAssignment_2(), "rule__JointDecoRef__DecoratorAssignment_2");
					put(grammarAccess.getJointRefAccess().getFixAssignment_0(), "rule__JointRef__FixAssignment_0");
					put(grammarAccess.getJointRefAccess().getRevAssignment_1(), "rule__JointRef__RevAssignment_1");
					put(grammarAccess.getJointRefAccess().getPrisAssignment_2(), "rule__JointRef__PrisAssignment_2");
					put(grammarAccess.getJointRefAccess().getContAssignment_3(), "rule__JointRef__ContAssignment_3");
					put(grammarAccess.getInertialAccess().getNameAssignment_2(), "rule__Inertial__NameAssignment_2");
					put(grammarAccess.getInertialAccess().getInertiaAssignment_3(), "rule__Inertial__InertiaAssignment_3");
					put(grammarAccess.getInertialAccess().getMassAssignment_4(), "rule__Inertial__MassAssignment_4");
					put(grammarAccess.getInertialAccess().getOriginAssignment_5(), "rule__Inertial__OriginAssignment_5");
					put(grammarAccess.getInertiaAccess().getNameAssignment_1(), "rule__Inertia__NameAssignment_1");
					put(grammarAccess.getInertiaAccess().getIxxAssignment_3(), "rule__Inertia__IxxAssignment_3");
					put(grammarAccess.getInertiaAccess().getIxyAssignment_5(), "rule__Inertia__IxyAssignment_5");
					put(grammarAccess.getInertiaAccess().getIxzAssignment_7(), "rule__Inertia__IxzAssignment_7");
					put(grammarAccess.getInertiaAccess().getIyyAssignment_9(), "rule__Inertia__IyyAssignment_9");
					put(grammarAccess.getInertiaAccess().getIyzAssignment_11(), "rule__Inertia__IyzAssignment_11");
					put(grammarAccess.getInertiaAccess().getIzzAssignment_13(), "rule__Inertia__IzzAssignment_13");
					put(grammarAccess.getVisualAccess().getNameAssignment_2(), "rule__Visual__NameAssignment_2");
					put(grammarAccess.getVisualAccess().getGeometryAssignment_3(), "rule__Visual__GeometryAssignment_3");
					put(grammarAccess.getVisualAccess().getOriginAssignment_4(), "rule__Visual__OriginAssignment_4");
					put(grammarAccess.getBoxAccess().getNameAssignment_1(), "rule__Box__NameAssignment_1");
					put(grammarAccess.getBoxAccess().getHeightAssignment_3(), "rule__Box__HeightAssignment_3");
					put(grammarAccess.getBoxAccess().getLengthAssignment_5(), "rule__Box__LengthAssignment_5");
					put(grammarAccess.getBoxAccess().getWidthAssignment_7(), "rule__Box__WidthAssignment_7");
					put(grammarAccess.getCylinderAccess().getNameAssignment_1(), "rule__Cylinder__NameAssignment_1");
					put(grammarAccess.getCylinderAccess().getRadiusAssignment_3(), "rule__Cylinder__RadiusAssignment_3");
					put(grammarAccess.getCylinderAccess().getLengthAssignment_5(), "rule__Cylinder__LengthAssignment_5");
					put(grammarAccess.getMeshAccess().getNameAssignment_1(), "rule__Mesh__NameAssignment_1");
					put(grammarAccess.getMeshAccess().getPathToFileAssignment_3(), "rule__Mesh__PathToFileAssignment_3");
					put(grammarAccess.getMeshAccess().getDimensionAssignment_4_1(), "rule__Mesh__DimensionAssignment_4_1");
					put(grammarAccess.getSphereAccess().getNameAssignment_1(), "rule__Sphere__NameAssignment_1");
					put(grammarAccess.getSphereAccess().getRadiusAssignment_3(), "rule__Sphere__RadiusAssignment_3");
					put(grammarAccess.getCollisionAccess().getNameAssignment_2(), "rule__Collision__NameAssignment_2");
					put(grammarAccess.getCollisionAccess().getGeometryAssignment_3(), "rule__Collision__GeometryAssignment_3");
					put(grammarAccess.getCollisionAccess().getOriginAssignment_4(), "rule__Collision__OriginAssignment_4");
					put(grammarAccess.getOriginAccess().getNameAssignment_1(), "rule__Origin__NameAssignment_1");
					put(grammarAccess.getOriginAccess().getXAssignment_3(), "rule__Origin__XAssignment_3");
					put(grammarAccess.getOriginAccess().getYAssignment_5(), "rule__Origin__YAssignment_5");
					put(grammarAccess.getOriginAccess().getZAssignment_7(), "rule__Origin__ZAssignment_7");
					put(grammarAccess.getOriginAccess().getRollAssignment_8_1(), "rule__Origin__RollAssignment_8_1");
					put(grammarAccess.getOriginAccess().getPitchAssignment_9_1(), "rule__Origin__PitchAssignment_9_1");
					put(grammarAccess.getOriginAccess().getYawAssignment_10_1(), "rule__Origin__YawAssignment_10_1");
					put(grammarAccess.getMassAccess().getNameAssignment_1(), "rule__Mass__NameAssignment_1");
					put(grammarAccess.getMassAccess().getMassValueInKilogramsAssignment_3(), "rule__Mass__MassValueInKilogramsAssignment_3");
					put(grammarAccess.getColorAccess().getNameAssignment_1(), "rule__Color__NameAssignment_1");
					put(grammarAccess.getColorAccess().getRedAssignment_3(), "rule__Color__RedAssignment_3");
					put(grammarAccess.getColorAccess().getGreenAssignment_5(), "rule__Color__GreenAssignment_5");
					put(grammarAccess.getColorAccess().getBlueAssignment_7(), "rule__Color__BlueAssignment_7");
					put(grammarAccess.getColorAccess().getAlphaAssignment_9(), "rule__Color__AlphaAssignment_9");
					put(grammarAccess.getTextureAccess().getNameAssignment_1(), "rule__Texture__NameAssignment_1");
					put(grammarAccess.getTextureAccess().getPathToFileAssignment_3(), "rule__Texture__PathToFileAssignment_3");
					put(grammarAccess.getLimitAccess().getNameAssignment_1(), "rule__Limit__NameAssignment_1");
					put(grammarAccess.getLimitAccess().getEffortAssignment_3(), "rule__Limit__EffortAssignment_3");
					put(grammarAccess.getLimitAccess().getVelocityAssignment_5(), "rule__Limit__VelocityAssignment_5");
					put(grammarAccess.getLimitAccess().getLowerAssignment_7(), "rule__Limit__LowerAssignment_7");
					put(grammarAccess.getLimitAccess().getUpperAssignment_9(), "rule__Limit__UpperAssignment_9");
					put(grammarAccess.getAxisAccess().getNameAssignment_1(), "rule__Axis__NameAssignment_1");
					put(grammarAccess.getAxisAccess().getXAssignment_3(), "rule__Axis__XAssignment_3");
					put(grammarAccess.getAxisAccess().getYAssignment_5(), "rule__Axis__YAssignment_5");
					put(grammarAccess.getAxisAccess().getZAssignment_7(), "rule__Axis__ZAssignment_7");
					put(grammarAccess.getCalibrationAccess().getNameAssignment_2(), "rule__Calibration__NameAssignment_2");
					put(grammarAccess.getCalibrationAccess().getRisingAssignment_3_1(), "rule__Calibration__RisingAssignment_3_1");
					put(grammarAccess.getCalibrationAccess().getFallingAssignment_4_1(), "rule__Calibration__FallingAssignment_4_1");
					put(grammarAccess.getDynamicsAccess().getNameAssignment_2(), "rule__Dynamics__NameAssignment_2");
					put(grammarAccess.getDynamicsAccess().getFrictionAssignment_3_1(), "rule__Dynamics__FrictionAssignment_3_1");
					put(grammarAccess.getDynamicsAccess().getDampingAssignment_4_1(), "rule__Dynamics__DampingAssignment_4_1");
					put(grammarAccess.getSafetyControllerAccess().getNameAssignment_1(), "rule__SafetyController__NameAssignment_1");
					put(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_2_1(), "rule__SafetyController__SoftLowerLimitAssignment_2_1");
					put(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_3_1(), "rule__SafetyController__SoftUpperLimitAssignment_3_1");
					put(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_4_1(), "rule__SafetyController__K_positionAssignment_4_1");
					put(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_6(), "rule__SafetyController__K_velocityAssignment_6");
					put(grammarAccess.getURDFAttrSignedNumericAccess().getValueAssignment(), "rule__URDFAttrSignedNumeric__ValueAssignment");
					put(grammarAccess.getURDFAttrFloatAccess().getValueAssignment(), "rule__URDFAttrFloat__ValueAssignment");
					put(grammarAccess.getURDFAttrINTAccess().getValueAssignment(), "rule__URDFAttrINT__ValueAssignment");
					put(grammarAccess.getURDFAttrNumericAccess().getValueAssignment(), "rule__URDFAttrNumeric__ValueAssignment");
					put(grammarAccess.getURDFAttrSTRINGAccess().getValueAssignment(), "rule__URDFAttrSTRING__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalDslParser typedParser = (InternalDslParser) parser;
			typedParser.entryRuleRobot();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
